@using WebAdmin.Models;
@using Resources;
@{

    List<SimpleEpicorJob> jobList = (List<SimpleEpicorJob>)(ViewBag.JobList);
    ViewBag.Title = Resource.Menu_AssemblyJobSplit;
    ViewBag.Item = Resource.Menu_AssemblyJobSplit;
    string Language = ViewBag.Language;
}
@section style{
    <!-- Bootstrap CheckBox -->
    <link rel="stylesheet" type="text/css" href="~/Content/plugins/iCheck/all.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/Compart/assets/plugins/fileinput/css/fileinput.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/plugins/bootstrap-select2/select2.min.css" />
}
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-5">
                @*<h4 class="card-title">Epicor MO List</h4>
                    <h6 class="card-subtitle">All MO from Epcior list here</h6>*@
                <h3>
                    <button class="btn btn-info" type="button" id="btnRefresh"><i class="fa fa-refresh"></i> @Resource.Txt_Refresh</button>
                    @*<button class="btn btn-info" type="button" id="btnSplit"><i class="fa fa-edit"></i> @Resource.Txt_Split</button>*@
                    <button class="btn btn-info" type="button" id="btnPrint" style="display:none;"><i class="fa fa-edit"></i>@Resource.Txt_Print</button>
                </h3>
            </div>
            <div class="col-md-7">
                <form class="input-form" id="DoSearch">
                    <div class="input-group pull-right">
                        <div class="input-group-btn">
                            <button type="button" id="searchByTitle" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @Resource.Txt_All
                            </button>
                            <input type="hidden" name="SearchBy" id="SearchBy">
                            <div class="dropdown-menu" x-placement="top-start" style="position: absolute; transform: translate3d(0px, -2px, 0px); top: 0px; left: 0px; will-change: transform;" id="searchOptions">
                                <a class="dropdown-item" href="javascript:;" data-searchby="JobNum">@Resource.Txt_JobNum</a>
                                <a class="dropdown-item" href="javascript:;" data-searchby="PartNum">@Resource.Txt_Material</a>
                                <a class="dropdown-item" href="javascript:;" data-searchby="PartDescription">@Resource.Txt_Description</a>
                                <a class="dropdown-item" href="#" data-searchby="Split">@Resource.Txt_Status</a>
                                <div role="separator" class="dropdown-divider"></div>
                                <a class="dropdown-item" href="javascript:;" data-searchby="All">@Resource.Txt_All</a>
                            </div>
                        </div>
                        <input type="text" class="form-control" autocomplete="off" aria-label="Text input with dropdown button" id="SearchKeywords" name="SearchKeywords">
                        <datalist id="SplitList">
                            <option value="@Resource.Txt_Unsplit"></option>
                            <option value="@Resource.Txt_Splitted"></option>
                        </datalist>
                        <span class="input-group-btn">
                            <button class="btn btn-secondary" type="button" id="btnSearch"><i class="fa fa-search"></i> @Resource.Txt_Query</button>
                            <button class="btn btn-info" type="button" id="btnShowAll"><i class="fa fa-list"></i> @Resource.Txt_All</button>
                        </span>
                    </div>
                </form>
            </div>
        </div>
        <div class="table-responsive">
            <table id="myTable" class="bordered" width="100%">
                <thead>
                    <tr role="row">
                        <th>
                            <input type="checkbox" name="chkBatchJobSelect" />
                        </th>
                        <th>@Resource.Txt_JobNum</th>
                        <th>@Resource.Txt_Material</th>
                        <th>@Resource.Txt_Description</th>
                        <th>@Resource.Txt_Drawing</th>
                        <th>@Resource.Txt_HeatNo</th>
                        <th>@Resource.Txt_Quantity</th>
                        <th>@Resource.Txt_BatchQuantity</th>
                        <th>@Resource.Txt_Status</th>
                        <th>@Resource.Txt_Operation</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalSetSplitCopys" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title" id="myModalLabel">@Resource.Txt_BatchQuantitySet</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                <form role="form">
                    <div class="card-body">
                        <div class="form-group">
                            <label for="exampleInputEmail1">@Resource.Txt_JobNum</label>
                            <p id="txtModalJobNum"></p>

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">@Resource.Txt_JobnumQuantity</label>
                            <p id="txtodalProdQty"></p>

                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">@Resource.Txt_BatchQuantity</label>
                            <input type="text" class="form-control" id="txtModalSplitQty" value="">
                            <input type="hidden" id="txtModalJobId" value="" />
                        </div>

                    </div>
                    <!-- /.card-body -->

                </form>
            </div>
            <div class="modal-footer">
                <button id="btnModalClose" type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> @Resource.Txt_Close</button>
                <button id="btnModalSave" type="button" class="btn btn-default"><i class="fa fa-save"></i> @Resource.Txt_Save</button>
                <button id="btnModalSpliet" type="button" class="btn btn-default"><i class="fa fa-save"></i> @Resource.Txt_Split</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal -->
</div>

<div class="modal fade" id="ModalHeatCode" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title" id="myModalLabel">HeatCode</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                <form role="form">
                    <div class="card-body">
                        <input type="file" name="txt_file" id="txt_file" multiple class="file-loading" />
                    </div>
                    <!-- /.card-body -->

                </form>
            </div>
            <div class="modal-footer">
                <button id="btnModalHCClose" type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> @Resource.Txt_Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal -->
</div>


@section script {
    <script src="~/Content/plugins/iCheck/icheck.js"></script>
    <script src="~/Content/Compart/assets/plugins/fileinput/js/plugins/sortable.min.js"></script>
    <script src="~/Content/Compart/assets/plugins/fileinput/js/plugins/piexif.min.js"></script>
    <script src="~/Content/Compart/assets/plugins/fileinput/js/fileinput.min.js"></script>
    <script src="~/Content/plugins/bootstrap-select2/select2.min.js"></script>

    <script>
        var CONSTANT = {
            // datatables常量
            DATA_TABLES: {
                DEFAULT_OPTION: { // DataTables初始化选项
                    LANGUAGE: {
                        sProcessing: "@Resource.Txt_Processing...",
                        sLengthMenu: "@Resource.Txt_DisplayResults",
                        sZeroRecords: "@Resource.Txt_NoMatchedResults",
                        sInfo: "@Resource.Txt_DisplayAreaResults",
                        sInfoEmpty: "@Resource.Txt_DisplayAreaResults2",
                        sInfoFiltered: "(@Resource.Txt_FilterResults)",
                        sInfoPostFix: "",
                        sSearch: "@Resource.Txt_Search:",
                        searchPlaceholder: "@Resource.Txt_KeywordSearch",
                        sUrl: "",
                        sEmptyTable: "@Resource.Txt_DataEmpty",
                        sLoadingRecords: "@Resource.Txt_Loading...",
                        sInfoThousands: ",",
                        oPaginate: {
                            sFirst: "@Resource.Txt_First",
                            sPrevious: "@Resource.Txt_Previous",
                            sNext: "@Resource.Txt_Next",
                            sLast: "@Resource.Txt_Last"
                        },
                        oAria: {
                            sSortAscending: ": @Resource.Txt_Ascending",
                            sSortDescending: ": @Resource.Txt_Descending"
                        }
                    },
                    // 禁用自动调整列宽
                    autoWidth: false,
                    // 为奇偶行加上样式，兼容不支持CSS伪类的场合
                    stripeClasses: ["odd", "even"],
                    // 取消默认排序查询,否则复选框一列会出现小箭头
                    order: [],
                    // 隐藏加载提示,自行处理
                    processing: false,
                    // 启用服务器端分页
                    serverSide: true,
                    // 禁用原生搜索
                    searching: false
                },
                COLUMN: {
                    // 复选框单元格
                    CHECKBOX: {
                        "orderable": false,
                        "bSortable": false,
                        "data": "id",
                        "width": '30px',
                        "targets": 0,
                        "class": "dt-center",
                        "render": function (data, type, row, meta) {
                            var content = '';
                            content += '	<input type="checkbox" name="chkJobID" value="' + data + '" Split="'+row["Split"]+'"/>';
                            return content;
                        }
                    }
                },
                // 回调
                CALLBACKS: {
                    // 表格绘制前的回调函数
                    PREDRAWCALLBACK: function (settings) {
                        if (settings.oInit.scrollX == '100%') {
                            // 给表格添加css类，处理scrollX : true出现边框问题
                            $(settings.nTableWrapper).addClass('dataTables_DTS');
                        }
                    },
                    INITCOMPLETE: function (settings, json) {
                        if (settings.oInit.scrollX == '100%' && $(settings.nTable).parent().innerWidth() - $(settings.nTable).outerWidth() > 5) {
                            $(settings.nScrollHead).children().width('100%');
                            $(settings.nTHead).parent().width('100%');
                            $(settings.nTable).width('100%');
                        }
                    },
                    // 表格每次重绘回调函数
                    DRAWCALLBACK: function (settings) {
                        if ($(settings.aoHeader[0][0].cell).find(':checkbox').length > 0) {
                            // 取消全选
                            $(settings.aoHeader[0][0].cell).find(':checkbox').prop('checked', false);
                        }
                        // 高亮显示当前行
                        $(settings.nTable).find("tbody tr").click(function (e) {
                            $(e.target).parents('table').find('tr').removeClass('warning');
                            $(e.target).parents('tr').addClass('warning');
                        });
                    }
                },
                // 常用render可以抽取出来，如日期时间、头像等
                RENDER: {
                    ELLIPSIS: function (data, type, row, meta) {
                        data = data || "";
                        return '<span title="' + data + '">' + data + '</span>';
                    }
                }

            }
        };

        //加载heatcode语言包
        if ('@Language' == 'ms') {
            document.write("<script src='/Content/Compart/assets/plugins/fileinput/js/locales/ms.js'><\/script>");
        }
        else if ('@Language' == 'zh-cn') {
            document.write("<script src='/Content/Compart/assets/plugins/fileinput/js/locales/zh.js'><\/script>");
        }
        else {//默认英语
            document.write("<script src='/Content/Compart/assets/plugins/fileinput/js/locales/LANG.js'><\/script>");
        }

        var pageTableId = 'AssemblyJobList', table;
        var columnDefs = [
            CONSTANT.DATA_TABLES.COLUMN.CHECKBOX,
            {
                "data": "JobNum",
                "width": '120px',
                "targets": 1
            },
            {
                "data": "PartNum",
                "targets": 2
            },
            {
                "data": "PartDescription",
                "orderable": false,
                "targets": 3,
                "render": function (data, type, row, meta) {
                    var s = "";
                    if (data.length > 50) {
                        s = " ...";
                    }
                    return data = data.substring(0, 50) + s;
                }
            },
            {
                "data": "DrawNum",
                "orderable": false,
                "targets": 4
            },
            {
                "data": "HeatCode",
                "targets": 5
            },
            {
                "data": "ProdQty",
                "orderable": false,
                "targets": 6,
                "render": function (data, type, row, meta) {
                    return Math.round(data);
                }
            },
            {
                "data": "SplitPerQty",
                "orderable": false,
                "width": '100px',
                "targets": 7
            },
            {
                "data": "Split",
                "targets": 8,
                "render": function (data, type, row, meta) {
                    var result = "";
                    if (data == "True") {
                        result = "@Resource.Txt_Splitted";
                    } else if (data == "False") {
                        result = "@Resource.Txt_Unsplit";
                    }
                    return result;
                }

            },
            {
                "data": "SplitPerQty",
                "orderable": false,
                "width": '180px',
                "targets": 9,
                "render": function (data, type, row, meta) {
                    if (row["Split"] == "False") {
                        return '<a href="javascript:openSetQtyView(\'' + row["id"] + '\',\'' + row["JobNum"] + '\',\'' + row["ProdQty"] + '\',\'' + row["SplitPerQty"] + '\')">@Resource.Txt_Modify</a> | <a href="javascript:openHeatCodeView(\'' + row["JobNum"] + '\')">HeatCode</a>';
                    } else {
                        return '@Resource.Txt_Modify | <a href="javascript:openHeatCodeView(\'' + row["JobNum"] + '\')">HeatCode</a>';
                    }
                }
            }
        ];

        $(document).ready(function () {
            var dtSearch = {};
            dtSearch.SearchBy = "";
            dtSearch.Value = "";

            $("#myTable_filter").hide();

            $('#myTable').on('draw.dt', function () {
                $('input[type="checkbox"]').iCheck({
                    handle: 'checkbox',
                    checkboxClass: 'icheckbox_flat-red',
                    radioClass: 'iradio_flat-red'
                });

                $("input[name='chkBatchJobSelect']").iCheck('uncheck');

                $("input[name='chkBatchJobSelect']").on('ifChecked', function (event) {
                    $("input[name='chkJobID']").iCheck('check')
                });

                $("input[name='chkBatchJobSelect']").on('ifUnchecked', function (event) {
                    $("input[name='chkJobID']").iCheck('uncheck')
                });

            });

            loadDataTable();

            $("#searchOptions a").click(function () {

                var getSearchByText = $(this).text().trim();
                var getSearchByValue = $(this).attr("data-searchby");

                $("#searchByTitle").text(getSearchByText);
                $("#SearchBy").val(getSearchByValue);

                if (getSearchByValue == "Split") {
                    $("#SearchKeywords").attr("list", "SplitList");
                    //$("#SearchKeywords").attr("autocomplete", "off");
                    //$("#SearchKeywords").attr("readonly", "readonly").focus();

                } else {
                    $("#SearchKeywords").removeAttr("list");
                    //$("#SearchKeywords").removeAttr("autocomplete")
                    $("#SearchKeywords").removeAttr("readonly").val("").focus();
                }


                //if (getSearchByValue == "Date") {
                //    $("#SearchKeywords").daterangepicker({
                //        locale: {
                //            format: 'YYYY/MM/DD'
                //        }
                //    });

                //    $("#SearchKeywords").attr("readonly", "readonly").focus();
                //} else {
                //    if ($("#SearchKeywords").data('daterangepicker') != undefined) {
                //        $("#SearchKeywords").data('daterangepicker').remove();
                //    }
                //    $("#SearchKeywords").removeAttr("readonly").val("").focus();
                //}


            });

            $('#SearchKeywords').on("keypress", function () {
                if (event.keyCode == "13") {
                    event.preventDefault();
                    $("#btnSearch").click();
                }
            });

            $("#btnModalSave").click(function () {
                setPerQty();
            });

            $("#btnModalSpliet").click(function () {
                var param = {};
                param.id = $("#txtModalJobId").val();
                param.copys = $("#txtModalSplitQty").val();
                param.jobnum = $("#txtModalJobNum").html();

                var parnt = /^\+?[1-9][0-9]*$/;
                if (!parnt.exec(param.copys) || param.copys == "0") {
                    showAlert("@Resource.Txt_EnterValidBatchQuantity");
                    return;
                }

                swal({
                    title: '@Resource.Txt_SplitEpicorJobnumConfirm?',
                    text: '@Resource.Txt_NoRollbackSplitted!',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '@Resource.Txt_Confirm',
                    cancelButtonText: '@Resource.Txt_Cancel',
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    buttonsStyling: false
                }).then(function (isConfirm) {
                    if (isConfirm.value === true) {

                        $.post("/JobSplit/CheckHeatCode", param, function (data) {
                            if (data.Result == "true") {
                                $.post("/JobSplit/SetSplitCopys", param, function (data) {
                                    jobNumList = [];
                                    jobNumList.push($("#txtModalJobId").val());

                                    @*$.ajax({
                                        type: "POST",
                                        url: "/JobSplit/EpicorJobSplit",
                                        async: false,
                                        dataType: "json",
                                        data: { "jobList": jobNumList },
                                        success: function (data) {
                                            $("#ModalSetSplitCopys").modal("hide");
                                            $('#myTable').DataTable().draw();

                                            swal(
                                                '@Resource.Txt_Splitted!',
                                                '@Resource.Txt_SplitJobnumSucceeded.',
                                                'success'
                                            );
                                        },
                                        error: function (e) {
                                            var startTitle = e.responseText.indexOf('<title>') + 7;
                                            var endTitle = e.responseText.indexOf('</title>');
                                            swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                                        }
                                    });*@

                                    $.post("/JobSplit/EpicorJobSplit", { "jobList": jobNumList }, function (data) {
                                        $("#ModalSetSplitCopys").modal("hide");
                                        $('#myTable').DataTable().draw();

                                        swal(
                                            '@Resource.Txt_Splitted!',
                                            '@Resource.Txt_SplitJobnumSucceeded.',
                                            'success'
                                        );
                                    }).error(function (e) {
                                        var startTitle = e.responseText.indexOf('<title>') + 7;
                                        var endTitle = e.responseText.indexOf('</title>');
                                        swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                                    });

                                });
                            } else {
                                swal(
                                    '@Resource.Txt_Unsplit！',
                                    '@Resource.Txt_UploadHCFirst。',
                                    'error'
                                );
                            }
                        });

                    }
                });
            });

            $("#btnRefresh").click(function () {
                var table = $('#myTable').DataTable();
                var searchby = $("#SearchBy").val();
                var searchvalue = $("#SearchKeywords").val();

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");

                table.search(searchvalue);
                table.draw();
            });

            $("#btnSplit").click(function () {
                return;

                jobNumList = [];
                $("input[name='chkJobID']:checked").each(function () {
                    jobNumList.push(this.value);
                });

                swal({
                    title: '@Resource.Txt_SplitEpicorJobnumConfirm?',
                    text: '@Resource.Txt_NoRollbackSplitted!',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '@Resource.Txt_Confirm',
                    cancelButtonText: '@Resource.Txt_Cancel',
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    buttonsStyling: false
                }).then(function (isConfirm) {
                    if (isConfirm.dismiss === 'cancel') {
                        //swal(
                        //  '已取消！',
                        //  '工单拆分已取消 :)',
                        //  'error'
                        //);
                    } else {
                        @*$.ajax({
                            type: "POST",
                            url: "/JobSplit/EpicorJobSplit",
                            async: false,
                            dataType: "json",
                            data: { "jobList": jobNumList },
                            success: function (data) {
                                $('#myTable').DataTable().draw();
                                swal(
                                    '@Resource.Txt_Splitted!',
                                    '@Resource.Txt_SplitJobnumSucceeded.',
                                    'success'
                                );
                            },
                            error: function (e) {
                                var startTitle = e.responseText.indexOf('<title>') + 7;
                                var endTitle = e.responseText.indexOf('</title>');
                                swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                            }
                        });*@

                        $.post("/JobSplit/EpicorJobSplit", { "jobList": jobNumList }, function (data) {
                            $('#myTable').DataTable().draw();
                            swal(
                                '@Resource.Txt_Splitted!',
                                '@Resource.Txt_SplitJobnumSucceeded.',
                                'success'
                            );
                        }).error(function (e) {
                            var startTitle = e.responseText.indexOf('<title>') + 7;
                            var endTitle = e.responseText.indexOf('</title>');
                            swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                        });
                    }

                });


            });


            $("#btnShowAll").click(function () {
                var table = $('#myTable').DataTable();
                var searchby = $("#SearchBy").val();
                var searchvalue = "";
                $("#SearchKeywords").val("");

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");

                table.search(searchvalue);
                table.draw();
            });

            $("#btnSearch").click(function () {
                var table = $('#myTable').DataTable();
                var searchby = $("#SearchBy").val();
                var searchvalue = $("#SearchKeywords").val();

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");
                table.columns(3).search("");

                if (searchby == "" || searchby == "All") {
                    table.search(searchvalue);
                    table.draw();
                } else {
                    switch (searchby) {
                        case "JobNum":
                            table.columns(0).search(searchvalue);
                            break;
                        case "PartNum":
                            table.columns(1).search(searchvalue);
                            break;
                        case "PartDescription":
                            table.columns(2).search(searchvalue);
                            break;
                        case "Split":
                            table.columns(3).search(searchvalue);
                            break;
                        default:
                            break;
                    }

                    table.draw();
                }
                if (searchby != "Date") {
                    $("#SearchKeywords").focus();
                }

            });

            $('#ModalSetSplitCopys').on('shown.bs.modal', function (e) {
                $(this).css('display', 'block');
                var modalHeight = $(window).height() / 2 - $('#ModalSetSplitCopys .modal-dialog').height() / 2;
                $(this).find('.modal-dialog').css({
                    'margin-top': modalHeight
                });
            });

            $("#btnPrint").click(function () {
                jobNumList = [];
                $("input[name='chkJobID']:checked").each(function () {
                    jobNumList.push(this.value);
                });

                if (jobNumList.length == 0) {
                    swal(
                          '@Resource.Txt_ErrorOccur!',
                          '@Resource.Txt_AssemblyJobnumSelect。',
                          ''
                      );
                } else {
                    var jobNumList = "";

                    $("input[name='chkJobID']:checked").each(function () {
                        //jobTravelerPrint(this.value);
                        jobNumList += "{\"PackNo\":\"" + this.value + "\",\"PrintName\":\"\\\\192.168.80.30\\D3-HP-1606(IT)\"},";
                    });

                    jobNumList = jobNumList.substring(0, jobNumList.length - 1);
                    jobNumList = "[" + jobNumList + "]"

                    var url = "@ViewBag.PrintServiceUrl";

                    window.open(url + "/ReportViwer.aspx?Param=" + jobNumList, '_blank');

                }

            });

        });

        function loadDataTable() {
            setUserColumnsDefWidths(pageTableId, columnDefs);

            table = $('#myTable').DataTable({
                language: {
                    "sProcessing": "@Resource.Txt_Processing...",
                    "sLengthMenu": "@Resource.Txt_DisplayResults",
                    "sZeroRecords": "@Resource.Txt_NoMatchedResults",
                    "sInfo": "@Resource.Txt_DisplayAreaResults",
                    "sInfoEmpty": "@Resource.Txt_DisplayAreaResults2",
                    "sInfoFiltered": "(@Resource.Txt_FilterResults)",
                    "sInfoPostFix": "",
                    "sSearch": "@Resource.Txt_Search:",
                    "sUrl": "",
                    "sEmptyTable": "@Resource.Txt_DataEmpty",
                    "sLoadingRecords": "@Resource.Txt_Loading...",
                    "sInfoThousands": ",",
                    "oPaginate": {
                        "sFirst": "@Resource.Txt_First",
                        "sPrevious": "@Resource.Txt_Previous",
                        "sNext": "@Resource.Txt_Next",
                        "sLast": "@Resource.Txt_Last"
                    },
                    "oAria": {
                        "sSortAscending": ": @Resource.Txt_Ascending",
                        "sSortDescending": ": @Resource.Txt_Descending"
                    }
                },
                destroy: true,
                scrollY: 400,
                scrollX: true,
                scrollCollapse: true,
                scroller: true,
                initComplete: function (settings) {
                    //Add JQueryUI resizable functionality to each th in the ScrollHead table
                    $('#myTable_wrapper .dataTables_scrollHead thead th').resizable({
                        handles: "e",
                        alsoResize: '#myTable_wrapper .dataTables_scrollHead table', //Not essential but makes the resizing smoother
                        stop: function () {
                            saveColumnSettings(pageTableId, table);
                            loadDataTable();
                        }
                    });
                },
                "autoWidth": false,
                "bAutoWidth": false,
                "processing": true,
                "serverSide": true,
                "searching": true,
                "ajax": {
                    "url": "/JobSplit/GetAssemblyJobList",
                    "type": "POST",
                    "error": function (e) {
                        var startTitle = e.responseText.indexOf('<title>') + 7;
                        var endTitle = e.responseText.indexOf('</title>');
                        swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                    }
                },
                "order": [[1, 'asc']],//设置第二列为升序，如果不设置order，则默认会按第一列升序，这样Checkbox旁边会出现一个排序的小三角
                "columns": columnDefs
            });
        }

        function openHeatCodeView(jobNum) {
            $("#txt_file").fileinput('destroy');
            //初始化fileinput
            var FileInput = function () {
                var oFile = new Object();

                //初始化fileinput控件（第一次初始化）
                oFile.Init = function (ctrlName, uploadUrl) {
                    var control = $('#' + ctrlName);

                    //初始化上传控件的样式
                    control.fileinput({
                        language: 'zh', //设置语言
                        uploadUrl: uploadUrl, //上传的地址
                        allowedFileExtensions: ['xls'],//接收的文件后缀
                        showUpload: true, //是否显示上传按钮
                        showCaption: true,//是否显示标题
                        browseClass: "btn btn-primary", //按钮样式
                        showPreview: false,             //是否显示预览按钮
                        dropZoneEnabled: false,//是否显示拖拽区域
                        maxFileCount: 1, //表示允许同时上传的最大文件个数
                        enctype: 'multipart/form-data',
                        validateInitialCount: true,
                        previewFileIcon: "<i class='glyphicon glyphicon-king'></i>",
                        msgFilesTooMany: "@Resource.Txt_UploadExceedMax！",
                    });

                    //导入文件上传完成之后的事件
                    $("#txt_file").on("fileuploaded", function (event, data, previewId, index) {
                        $("#txt_file").fileinput('refresh');
                        swal('@Resource.Txt_UploadSucceeded！','','success');
                    });
                }
                return oFile;
            };

            var oFileInput = new FileInput();
            oFileInput.Init("txt_file", "/JobSplit/UploadHeatCode?jobnum="+jobNum);

            $("#ModalHeatCode").modal();
        }

        function openSetQtyView(id, jobNum, prodQty, splitPerQty) {
            $('#modal-alert').remove();
            $("#txtModalJobId").val(id);
            $("#txtModalJobNum").html(jobNum);
            $("#txtodalProdQty").html(Math.round(prodQty));
            $("#txtModalSplitQty").val(splitPerQty);
            $("#ModalSetSplitCopys").modal();
        }

        function setPerQty() {
            var param = {};
            param.id = $("#txtModalJobId").val();
            param.copys = $("#txtModalSplitQty").val();

            var parnt = /^\+?[1-9][0-9]*$/;
            if (!parnt.exec(param.copys || param.copys == "0")) {
                showAlert("@Resource.Txt_EnterValidBatchQuantity");
                return;
            }

            swal({
                title: '@Resource.Txt_ModifyBatchQuantityConfirm',
                text: '',
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@Resource.Txt_Confirm',
                cancelButtonText: '@Resource.Txt_Cancel',
                confirmButtonClass: 'btn btn-success',
                cancelButtonClass: 'btn btn-danger',
                buttonsStyling: false
            }).then(function (isConfirm) {
                if (isConfirm.value === true) {
                    $.post("/JobSplit/SetSplitCopys", param, function (data) {
                        $("#ModalSetSplitCopys").modal("hide");
                        $('#myTable').DataTable().draw();

                        swal(
                            '@Resource.Txt_Modified！',
                            '@Resource.Txt_ModifyBatchQuantitySucceeded。',
                            'success'
                        );
                    });
                }
            });



        }
    </script>
}



