@using Resources;
@{
    ViewBag.Title = Resource.Menu_Kanban;
    ViewBag.Item = Resource.Menu_FEMachineStatus;
}

@section style{
    <style>
        .table td, th {
            padding: 0px !important;
        }

        .ribbon-wrapper.card {
            min-width: 130px;
        }
    </style>
}

<div class="card-group" id="SummaryContainer">
    <div style="height:200px">
        <svg class="circular" viewBox="25 25 50 50">
            <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10" />
        </svg>
    </div>
</div>

<div class="row searchPanel hide">
    <div class="col-lg-12">
        <form id="formList">
            <div class="card m-b-5">
                <div class="card-body p-b-10">
                    <div id="searchFields">
                        <div class="row">
                            <div class="col-md-7">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group m-b-5">
                                            <label>Part#</label>
                                            <input type="text" class="form-control form-control-sm" name="inputPartNum" id="inputPartNum" />
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group m-b-5">
                                            <label>Machine Type</label>
                                            <select class="selectpicker" data-style="form-control form-control-sm btn-secondary" id="inputMachineType" name="inputMachineType">
                                                <option>All</option>
                                                <option value="FE_L">Lathe</option>
                                                <option value="FE_M">Mill</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group m-b-5">
                                            <label>Location</label>
                                            <select class="selectpicker" data-style="form-control form-control-sm btn-secondary" id="inputLocation" name="inputLocation">
                                                <option>All</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group m-b-5">
                                            <label>Machine ID</label>
                                            <input type="text" class="form-control form-control-sm" name="inputMachineID" id="inputMachineID" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <button class="btn btn-secondary" type="button" id="btnSearch"><i class="fa fa-search"></i> Search</button>
                                <button class="btn btn-info" type="button" id="btnShowAll"><i class="fa fa-list"></i> Show All</button>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- ============================================================== -->
<!-- End Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!-- Start Page Content -->
<!-- ============================================================== -->
<div id="KanbanContainer">
</div>
<!-- ============================================================== -->
<!-- End PAge Content -->

<div class="row PanelForGroupClone hide" id="PanelForGroupClone">
    <div class="col-lg-12 col-md-12 col-12">
        <div class="card m-b-5">
            <div class="card-header">
                <div class="card-actions">
                    <a class="" data-action="collapse"><i class="ti-minus"></i></a>
                    <a class="btn-minimize" data-action="expand"><i class="mdi mdi-arrow-expand"></i></a>
                    <a class="btn-close" data-action="close"><i class="ti-close"></i></a>
                </div>
                <h4 class="card-title m-b-0 LocationGroupName"></h4>
            </div>
            <div class="card-body b-t collapse show p-b-5 p-t-5">
                <div class="row KanbanListContainer">

                </div>
            </div>
        </div>
    </div>
</div>

<div class="ribbon-wrapper card p-l-5 p-r-5 m-b-0 p-b-0 PanelForKanbanClone hide " id="PanelForKanbanClone">
    <div class="ribbon lblMachineBG"><i class="fa fa-product-hunt"></i> <span class="lblMachineID"></span></div>
    <table class="table v-middle no-border no-padding font-11 m-b-0">
        <tbody>
            <tr>
                <td>产品</td>
                <td align="right"><span class="lblProductName"></span></td>
            </tr>
            <tr>
                <td>工单</td>
                <td align="right"><span class="lblJobNum"></span></td>
            </tr>
            <tr>
                <td>工序</td>
                <td align="right"><span class="lblOpCode"></span></td>
            </tr>
            <tr>
                <td>开工时间</td>
                <td align="right"><span class="lblStartTime"></span></td>
            </tr>
            <tr>
                <td>已用时</td>
                <td align="right"><span class="lblElapsedTime"></span></td>
            </tr>
            <tr>
                <td>开工数量</td>
                <td align="right"><span class="lblStartQty"></span></td>
            </tr>
            <tr>
                <td>操作员</td>
                <td align="right"><span class="lblOperator"></span></td>
            </tr>
        </tbody>
    </table>
</div>
<div class="card PanelForSummarizeClone hide " id="PanelForSummarizeClone">
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <div class="d-flex">
                    <div class="m-r-20 align-self-center">
                        <span class="round lblSumLocation"></span>
                    </div>
                    <div class="align-self-center">
                        <h3 class="card-title lblSumPercentage">Bandwidth usage</h3>
                    </div>
                </div>
                <table class="table v-middle no-border">
                    <tbody>
                        <tr>
                            <td></td>
                            <td>L-车床</td>
                            <td>M-铣床</td>
                        </tr>
                        <tr>
                            <td class="text-success">Running [运行]</td>
                            <td><span class="label label-light-info lblRunning_l" style="width:35px"></span></td>
                            <td><span class="label label-light-warning lblRunning_m" style="width:35px"></span></td>
                        </tr>
                        <tr>
                            <td class="text-muted">Idle [空闲]</td>
                            <td><span class="label label-light-info lblIdle_l" style="width:35px"></span></td>
                            <td><span class="label label-light-warning lblIdle_m" style="width:35px"></span></td>
                        </tr>
                        <tr>
                            <td class="text-info">Total [总数]</td>
                            <td><span class="label label-light-info lblSumTotal_l" style="width:35px"></span></td>
                            <td><span class="label label-light-warning lblSumTotal_m" style="width:35px"></span></td>
                        </tr>
                    </tbody>
                </table>
                <div class="col-12">
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" style="" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section script {
    <script>
        //Record the latest list of Kanban items and Groups
        var LatestKanbanItems = [];
        var LatestKanbanGroup = [];

        //For showing the summary info of machine type, locations
        var statisticsObj = {};

        //Machine list
        var machineList = {};

        //Total location
        var totalLocationLength = 0;

        //FA Machines list
        var FAMachines = [];


        function GetElapsedTime(startTime, obj) {
            var date = new Date().getTime() - Date.parse(new Date(startTime));
            var days = date / 1000 / 60 / 60 / 24;
            var daysRound = Math.floor(days);
            var hours = date / 1000 / 60 / 60 - (24 * daysRound);
            var hoursRound = Math.floor(hours);
            var minutes = date / 1000 / 60 - (24 * 60 * daysRound) - (60 * hoursRound);
            var minutesRound = Math.floor(minutes);
            var seconds = date / 1000 - (24 * 60 * 60 * daysRound) - (60 * 60 * hoursRound) - (60 * minutesRound);
            var secondsRound = Math.floor(seconds);
            var time = (daysRound + "<span class='text-success'>d</span>" + hoursRound + "<span class='text-success'>h</span>" + minutesRound + "<span class='text-success'>m</span>" + secondsRound + "<span class='text-success'>s</span>");

            //return time;
            obj.html(time);
        }

        //Get the Machine List
        function LoadMachineList() {
            $.ajax({
                type: "POST", url: "../Handler/MESData.ashx", dataType: "json", async: false,
                data: { CommandType: "GetMachineList", sqlCriteria: getSearchCriteriaForMachine() },
                success: function (getData) {
                    var totalMachine = 0;
                    var totalLathe = 0;
                    var totalMill = 0;
                    $(getData.FAMachines).each(function (f, a) {
                        FAMachines.push(a.MachineID);
                    });

                    $(getData.data).each(function (i, t) {

                        //Location's length
                        totalLocationLength = i++;

                        var subItem = {};
                        subItem.l = 0;
                        subItem.m = 0;
                        subItem.machines = [];


                        totalMachine += t.LocationGroupCount;

                        $(t.MachineType).each(function (k, g) {
                            //console.log(g.MachineType);

                            if (g.MachineType == "Lathe") {
                                subItem.l += g.MachineCount;
                                totalLathe += g.MachineCount;
                            } else if (g.MachineType == "Mill") {
                                subItem.m += g.MachineCount;
                                totalMill += g.MachineCount;
                            }

                        });

                        //Adding machines
                        $(t.MachineList).each(function (k, g) {
                            //console.log(g.MachineID);
                            subItem.machines.push(g.MachineID);
                        });

                        machineList[t.LocationGroup] = subItem;

                        machineList["total_l"] = totalLathe;
                        machineList["total_m"] = totalMill;

                    });
                    //Adding the total
                    machineList["total"] = totalMachine;

                    // console.log(machineList);
                }
            });
        }

        function LoadKanban() {

            $.ajax({
                type: "POST", url: "../Handler/MESData.ashx", dataType: "json",
                data: { CommandType: "GetShopFloorKanbansByLocation", sqlCriteria: getSearchCriteria() },
                success: function (getData) {

                    //Empty the container before loading
                    $("#KanbanContainer").empty();
                    $("#inputLocation").empty().append("<option >All</option>");;

                    $(getData.data).each(function (i, t) {
                        DisplayKanban(t.LocationGroup, t.ShopFloorKanbanList);

                        LatestKanbanGroup.push(t.LocationGroup);

                        $("#inputLocation").append("<option value='" + t.LocationGroup + "'>" + t.LocationGroup + "</option>");


                    });
                    //Showing the summary quanity of machine for each location
                    var totalMachine = 0;
                    var totalM = 0, totalL = 0; totalSetup = 0;

                    $('#SummaryContainer').empty();
                    $.each(statisticsObj, function (k, v) {
                        totalMachine = totalMachine + statisticsObj[k].Mill + statisticsObj[k].Lath;
                        totalM = totalM + statisticsObj[k].Mill;
                        totalL = totalL + statisticsObj[k].Lath;
                        totalSetup = totalSetup + statisticsObj[k].Setup;

                        if ($("#" + k + "_label").length != 0) {
                            //Get the length of machine locations

                            if (machineList[k] != undefined) {
                                var locAll = machineList[k].l + machineList[k].m;
                                var runnAll = statisticsObj[k].Mill + statisticsObj[k].Lath;
                                var getPercent = (runnAll / locAll * 100).toFixed(2);
                                $("#" + k + "_label").html($("#" + k + "_label").text() + " <code> " + getPercent + "% : " + (runnAll) + "/" + (locAll) + "(L:" + statisticsObj[k].Lath + "/" + machineList[k].l + ",M:" + statisticsObj[k].Mill + "/" + machineList[k].m + ")</code>");

                                var sumObj = $("#PanelForSummarizeClone").clone(true).removeClass("hide");
                                sumObj.find('.lblSumLocation').text(k);
                                sumObj.find('.progress-bar').attr("style", "width: " + getPercent + "%; height: 6px;");
                                sumObj.find('.lblSumPercentage').text(getPercent + "%");
                                sumObj.find('.lblRunning_l').text(statisticsObj[k].Lath);
                                sumObj.find('.lblRunning_m').text(statisticsObj[k].Mill);
                                sumObj.find('.lblIdle_l').text(machineList[k].l - statisticsObj[k].Lath);
                                sumObj.find('.lblIdle_m').text(machineList[k].m - statisticsObj[k].Mill);
                                sumObj.find('.lblSumTotal_l').text(machineList[k].l);
                                sumObj.find('.lblSumTotal_m').text(machineList[k].m);

                                $("#SummaryContainer").append(sumObj);

                            }
                        }
                    });
                    //Sort the Summary items
                    var summaryGroup = $("#SummaryContainer").find(".PanelForSummarizeClone");
                    i = 0;
                    summaryGroup.sort(function (a, b) {
                        i++;
                        var valveNumOfa = $(a).find('.lblSumPercentage').text().replace("%", "");
                        var valveNumOfb = $(b).find('.lblSumPercentage').text().replace("%", "");

                        if (parseInt(valveNumOfa) < parseInt(valveNumOfb)) return 1;
                        else return -1;
                    });
                    //Detach and append the new sequence
                    summaryGroup.detach().appendTo('#SummaryContainer');
                    //Showing different colors
                    var getSumGroup = $("#SummaryContainer").find(".PanelForSummarizeClone");
                    if (getSumGroup.length > 0) {
                        //Display summary info of each location by odering
                        var rankDefaultColor = "bg-yellow"; var rankLast = "bg-danger"; var rankFirst = "bg-green";
                        getSumGroup.find('.lblSumLocation').addClass(rankDefaultColor);
                        getSumGroup.eq(0).find('.lblSumLocation').removeClass(rankDefaultColor).addClass(rankFirst);
                        getSumGroup.eq(getSumGroup.length - 1).find('.lblSumLocation').removeClass(rankDefaultColor).addClass(rankLast);

                        getSumGroup.find('.progress-bar').addClass(rankDefaultColor);
                        getSumGroup.eq(0).find('.progress-bar').removeClass(rankDefaultColor).addClass(rankFirst);
                        getSumGroup.eq(getSumGroup.length - 1).find('.progress-bar').removeClass(rankDefaultColor).addClass(rankLast);
                    }


                    //Gets the server time
                    $("#lblServerTime").html("( Last Refresh Time: " + getData.serverTimeStamp + ")");
                    $("#HeaderSummary").html("<div class='d-flex flex-row'><div class='b-r p-l-5 p-r-10 text-primary' >Total</div> <div class='b-r p-l-5 p-r-10 text-primary'>" + (totalMachine / machineList.total * 100).toFixed(2) + "%<h6 class='text-primary'>" + totalMachine + "/" + machineList.total + "</h6></div> <div class='b-r p-l-10 p-r-10 ' >Lathe</div> <div class='b-r p-l-5 p-r-10'>" + (totalL / machineList.total_l * 100).toFixed(2) + "%<h6>" + totalL + "/" + machineList.total_l + "</h6></div><div class='b-r p-l-5 p-r-10 ' >Mill</div><div class='b-r p-l-5 p-r-10'>" + (totalM / machineList.total_m * 100).toFixed(2) + "%<h6>" + totalM + "/" + machineList.total_m + "</h6></div><div class='b-r p-l-5 p-r-10 ' >Setup</div><div class='b-r p-l-5 p-r-10'>" + (totalSetup / machineList.total * 100).toFixed(2) + "%<h6>" + totalSetup + "/" + machineList.total + "</h6></div></div>");


                    //Refresh the list of location
                    $('.selectpicker').selectpicker('refresh');

                    //Remove these already finished Kanban Group and Items
                    $(".PanelForGroupClone").each(function () {
                        var getObj = $(this).attr("ID");

                        //Not remove the clone object 
                        if ($.inArray(getObj, LatestKanbanGroup) < 0 && getObj != 'PanelForGroupClone') {
                            $("#" + getObj).remove();
                        }
                    });
                    $(".PanelForKanbanClone").each(function () {
                        var getObj = $(this).attr("ID");

                        //Not remove the clone object 
                        if ($.inArray(getObj, LatestKanbanItems) < 0 && getObj != 'PanelForKanbanClone') {
                            $("#" + getObj).remove();
                        }
                    });

                    //Empty the objects
                    LatestKanbanItems = [];
                    LatestKanbanGroup = [];
                    statisticsObj = {};

                    //Show the search panel
                    $(".searchPanel").removeClass("hide");
                },
                error: function (err) {
                }
            });


        }

        //Display the Kanban by Locations
        function DisplayKanban(Location, Kanbanlist) {
            var ifClonedGrpExists = false;
            var getClonedGrp;


            //Check if the Group locations hasn't closed off
            if ($("#" + Location).length == 0) {
                getClonedGrp = $(".PanelForGroupClone").clone(true).removeClass("PanelForGroupClone hide").attr("ID", Location);
            } else {
                ifClonedGrpExists = true;
                getClonedGrp = $("#" + Location);
            }
            getClonedGrp.find('.LocationGroupName').text(Location).attr("ID", Location + "_label");
            $("#KanbanContainer").append(getClonedGrp);

            //Display the detail kanban list
            DisplayKanbanList(Kanbanlist, getClonedGrp);


            //Here to display the un-running 
            if (machineList[Location] != undefined) {
                // console.log(machineList[Location]);
                $.each(machineList[Location].machines, function (i, t) {
                    //console.log(statisticsObj[Location].machines);
                    if (statisticsObj[Location].machines != undefined) {
                        //Check if exists in the Loaded machines
                        if (Location == "E1") {
                            console.log(statisticsObj[Location].machines);
                            console.log($.inArray(t, "LN001"));
                        }
                        if ($.inArray(t, statisticsObj[Location].machines) < 0) {
                            //Append the un-loaded machines shwoing in Gray color

                            var kanbanObj = $("#PanelForKanbanClone").clone(true).removeClass("hide").addClass("bg-gray");
                            kanbanObj.removeAttr("ID");
                            kanbanObj.find('.lblMachineBG').removeClass("ribbon-info ribbon-warning").addClass("ribbon-gray");
                            kanbanObj.find('.lblMachineID').text(t);
                            getClonedGrp.find(".KanbanListContainer").append(kanbanObj);

                        }
                    }
                });
            }
        }

        //Getting the search Criteria
        function getSearchCriteria() {
            var returnSQL = "";
            if ($("#inputPartNum").val().trim() != "") {
                returnSQL += " and PartNum like'%" + $("#inputPartNum").val().trim() + "%'";
            }
            if ($("#inputMachineType").val() != "") {
                if ($("#inputMachineType").val() != "All")
                    returnSQL += " and OpGroup='" + $("#inputMachineType").val() + "'";
            }
            if ($("#inputLocation").val() != "") {
                if ($("#inputLocation").val() != "All")
                    returnSQL += " and Location='" + $("#inputLocation").val() + "'"
            }
            if ($("#inputMachineID").val().trim() != "") {
                returnSQL += " and MachineID like '%" + $("#inputMachineID").val().trim() + "%'";
            }

            return returnSQL;
        }


        //Getting the search Criteria for all the Machines
        function getSearchCriteriaForMachine() {
            var returnSQL = "";
            if ($("#inputMachineType").val() != "") {
                if ($("#inputMachineType").val() != "All") {

                    var machineType = $("#inputMachineType").val().replace("FE_M", "Mill").replace("FE_L", "Lathe");
                    returnSQL += " and MachineType='" + machineType + "'";
                }
            }
            if ($("#inputLocation").val() != "") {
                if ($("#inputLocation").val() != "All")
                    returnSQL += " and Location='" + $("#inputLocation").val() + "'"
            }
            if ($("#inputMachineID").val().trim() != "") {
                returnSQL += " and MachineID like '%" + $("#inputMachineID").val().trim() + "%'";
            }

            return returnSQL;
        }

        //Display the kanbanlist and exclusive the FA machines
        //Also display the un-running machine by each of locations
        function DisplayKanbanList(kanbanList, container) {
            $(kanbanList).each(function (s, item) {
                //If FA machine exists
                var ifFAExists = $.inArray(item.MachineID, FAMachines) >= 0 ? true : false;
                //console.log("Machine:"+item.MachineID+"  -- "+ifFAExists);
                if (statisticsObj[item.Location] == undefined) {
                    //Adding the quanity for lath & mill
                    var subItem = {};
                    subItem.Lath = 0;
                    subItem.Mill = 0;
                    subItem.Setup = 0;
                    subItem.machines = [];


                    if (item.OpGroup == "FE_M" && item.OpCode != "NF01" && !ifFAExists) {
                        subItem.Mill = 1;
                    } else if (item.OpGroup == "FE_L" && item.OpCode != "NF01" && !ifFAExists) {
                        subItem.Lath = 1;
                    }

                    subItem.machines.push(item.MachineID);

                    //Add Setup
                    if (item.TransType == "SETUP") {
                        subItem.Setup = 1;
                    }
                    statisticsObj[item.Location] = subItem;
                } else {
                    if (item.OpGroup == "FE_M" && (item.OpCode != "NF01" || item.TransType == "SETUP") && !ifFAExists) {
                        statisticsObj[item.Location].Mill = statisticsObj[item.Location].Mill + 1;
                    } else if (item.OpGroup == "FE_L" && (item.OpCode != "NF01" || item.TransType == "SETUP") && !ifFAExists) {
                        statisticsObj[item.Location].Lath = statisticsObj[item.Location].Lath + 1;
                    } else {
                        console.log("Here" + FAMachines + "MachineID:" + item.MachineID + ":");
                    }

                    //Adding the Machines
                    statisticsObj[item.Location].machines.push(item.MachineID);

                    //Add Setup
                    if (item.TransType == "SETUP") {
                        statisticsObj[item.Location].Setup = statisticsObj[item.Location].Setup + 1;
                    }
                }
                if (!ifFAExists) {
                    LatestKanbanItems.push(item.JobNum);
                    //Check if the object exists
                    if ($("#" + item.JobNum).length > 0) {
                        var kanbanObj = $("#" + item.JobNum);
                        //console.log("kanban exists ID-" + item.JobNum);
                    } else {
                        var kanbanObj = $("#PanelForKanbanClone").clone(true).removeClass("hide");
                        kanbanObj.removeAttr("ID").attr("ID", item.JobNum);
                        kanbanObj.addClass(item.JobNum);

                        container.find(".KanbanListContainer").append(kanbanObj);

                        //console.log("kanban doesn't exists ID-" + item.JobNum + " -- " + kanbanObj.attr("ID"));
                    }


                    //Show different color based on  FE_M or FE_L or Setup
                    var itemsBgColor = "";
                    var machineID = item.MachineID;
                    if (item.OpGroup == "FE_M" && item.TransType != "SETUP") {
                        itemsBgColor = "ribbon-info"
                    } else if (item.OpGroup == "FE_L" && item.TransType != "SETUP") {
                        itemsBgColor = "ribbon-warning"
                    }
                    else if (item.TransType == "SETUP") {
                        itemsBgColor = "ribbon-success"
                        machineID = machineID + " [Setup]";
                    }
                    kanbanObj.find('.lblMachineBG').removeClass("ribbon-info ribbon-warning").addClass(itemsBgColor);
                    kanbanObj.find('.lblMachineID').text(machineID);
                    kanbanObj.find('.lblJobNum').text(item.JobNum);
                    kanbanObj.find('.lblProductName').text(item.PartNum);
                    kanbanObj.find('.lblOpCode').text(item.OpDesc);
                    var transTime = new Date(item.TransTime).Format("MM-dd HH:mm:ss");
                    kanbanObj.find('.lblStartTime').text(transTime);
                    setInterval(function () { GetElapsedTime(item.TransTime, kanbanObj.find('.lblElapsedTime')) }, 1000);
                    kanbanObj.find('.lblStartQty').text(item.ReportingQTY);
                    kanbanObj.find('.lblOperator').text(item.UserID);
                }
            });

            // console.log(statisticsObj);
        }



        $(function () {
            //绑定回车事件
            $('#inputPartNum,#inputMachineID').on("keypress", function () {
                if (event.keyCode == "13") {
                    event.preventDefault();
                    $("#btnSearch").click();
                }
            });

            LoadMachineList();
            //First loading
            LoadKanban();
            setInterval(LoadKanban, 60000);

            //Search
            $("#btnSearch").click(function () {
                LoadMachineList();
                LoadKanban();
            });

            //Show All
            $("#btnShowAll").click(function () {
                ResetForm("formList");
                //Refresh the list of location
                $('.selectpicker').selectpicker('refresh');


                LoadKanban();
            });

        });
    </script>
}