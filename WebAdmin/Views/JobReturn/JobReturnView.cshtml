@using WebAdmin.Models;
@using Resources;
@{

    List<SimpleOpMaster> opList = (List<SimpleOpMaster>)(ViewBag.opList);
    ViewBag.Title = Resource.Menu_JobReturn;
    ViewBag.Item = Resource.Menu_JobReturn;
}
@section style{
    <!-- Bootstrap CheckBox -->
    <link rel="stylesheet" type="text/css" href="~/Content/plugins/iCheck/all.css" />
    <style>
        * {
            padding: 0;
            margin: 0;
        }

        a {
            text-decoration: none;
            clear: inherit;
        }

        li {
            list-style: none;
        }

        .box {
            margin: 20px auto;
        }

        .box_l, .box_r {
            height: 360px;
            border: 1px solid #ccc;
            overflow: auto;
        }

        .box_l {
            float: left;
        }

        .box_m {
            float: left;
            text-align: center;
        }

            .box_m a {
                padding: 5px 10px;
                border: 1px solid #ccc;
                display: block;
                width: 70px;
                margin: 10px auto;
                border-radius: 5px;
            }

        .box_r {
            float: right;
        }

        .box, ::after {
            box-sizing: initial
        }

        .box, ::before {
            box-sizing: initial
        }

        .box_l li, .box_r li {
            line-height: 35px;
            font-size: 14px;
            padding-left: 15px;
            border-bottom: 1px solid #CCCCCC;
            cursor: pointer
        }

            .box_l li:last-child, .box_r li:last-child {
                border: none
            }

            .box_l li.choose, .box_r li.choose {
                background: #ddd;
            }
    </style>
}
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-5">
                @*<h4 class="card-title">Epicor MO List</h4>
                    <h6 class="card-subtitle">All MO from Epcior list here</h6>*@
                <h3>
                    <button class="btn btn-info" type="button" id="btnRefresh"><i class="fa fa-refresh"></i> @Resource.Txt_Refresh</button>
                </h3>
            </div>
            <div class="col-md-7">
                <form class="input-form" id="DoSearch">
                    <div class="input-group pull-right">
                        <div class="input-group-btn">
                            <button type="button" id="searchByTitle" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @Resource.Txt_All
                            </button>
                            <input type="hidden" name="SearchBy" id="SearchBy">
                            <div class="dropdown-menu" x-placement="top-start" style="position: absolute; transform: translate3d(0px, -2px, 0px); top: 0px; left: 0px; will-change: transform;" id="searchOptions">
                                <a class="dropdown-item" href="javascript:;" data-searchby="ParentJobNum">@Resource.Txt_JobNum</a>
                                <a class="dropdown-item" href="javascript:;" data-searchby="PartNum">@Resource.Txt_Material</a>
                                <a class="dropdown-item" href="javascript:;" data-searchby="PartDescription">@Resource.Txt_Description</a>
                                <a class="dropdown-item" href="javascript:;" data-searchby="All">@Resource.Txt_All</a>

                                @*<div role="separator" class="dropdown-divider"></div>
                                    <a class="dropdown-item" href="#" data-searchby="Date">日期</a>*@
                            </div>
                        </div>
                        <input type="text" class="form-control" aria-label="Text input with dropdown button" id="SearchKeywords" name="SearchKeywords">
                        <span class="input-group-btn">
                            <button class="btn btn-secondary" type="button" id="btnSearch"><i class="fa fa-search"></i> @Resource.Txt_Query</button>
                            <button class="btn btn-info" type="button" id="btnShowAll"><i class="fa fa-list"></i> @Resource.Txt_All</button>
                        </span>
                    </div>
                </form>
            </div>
        </div>
        <div class="table-responsive">
            <table id="myTable" class="bordered" width="100%">
                <thead>
                    <tr role="row">
                        <th>
                            <input type="checkbox" name="chkBatchJobSelect" />
                        </th>
                        <th>@Resource.Txt_JobNum</th>
                        <th>@Resource.Txt_Material</th>
                        <th>@Resource.Txt_Description</th>
                        <th>@Resource.Txt_Drawing</th>
                        <th>@Resource.Txt_Quantity</th>
                        <th>@Resource.Txt_ReworkOP</th>
                        <th>@Resource.Txt_DiscrepReason</th>
                        <th>@Resource.Txt_Operation</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalJobRetrun" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@Resource.Txt_ReworkOPSelect</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body form-group">
                <input id="epicorjobnum" type="hidden" />
                <input id="reworkjobid" type="hidden" />
                <div class="box row">
                    <div class="box_l col-4" style="padding-left:0px;padding-right:0px;margin-left:20px;">
                        @foreach (SimpleOpMaster op in opList)
                        {
                            <li>@op.OpCode</li>
                        }

                    </div>
                    <div class="box_m col-3">
                        <a href="javascript:" id="alltop" style="margin-top: 0px; width: 80%">@Resource.Txt_MoveFirst</a>
                        <a href="javascript:" id="top" style="width:80%">@Resource.Txt_MoveUp</a>
                        <a href="javascript:" id="allleft" style="width:80%">@Resource.Txt_RemoveAll</a>
                        <a href="javascript:" id="left" style="width:80%">@Resource.Txt_RemoveSingle</a>
                        <a href="javascript:" id="right" style="width:80%">@Resource.Txt_AddSingle</a>
                        <a href="javascript:" id="allright" style="width:80%">@Resource.Txt_AddAll</a>
                        <a href="javascript:" id="bottom" style="width:80%">@Resource.Txt_MoveDown</a>
                        <a href="javascript:" id="allbottom" style="width:80%">@Resource.Txt_MoveLast</a>
                    </div>
                    <div class="box_r col-4" style="padding-left:0px;padding-right:0px;" id="operList">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnModalClose" type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> @Resource.Txt_Close</button>
                <button id="btnModalSave" type="button" class="btn btn-default"><i class="fa fa-save"></i> @Resource.Txt_Create</button>
            </div>
        </div>
    </div>
</div>

@section script {
    <script src="~/Content/plugins/iCheck/icheck.js"></script>
    <script src="~/Content/plugins/orso/orso.min.js"></script>
    <script>
        var CONSTANT = {
            // datatables常量
            DATA_TABLES: {
                DEFAULT_OPTION: { // DataTables初始化选项
                    LANGUAGE: {
                        sProcessing: "@Resource.Txt_Processing...",
                        sLengthMenu: "@Resource.Txt_DisplayResults",
                        sZeroRecords: "@Resource.Txt_NoMatchedResults",
                        sInfo: "@Resource.Txt_DisplayAreaResults",
                        sInfoEmpty: "@Resource.Txt_DisplayAreaResults2",
                        sInfoFiltered: "(@Resource.Txt_FilterResults)",
                        sInfoPostFix: "",
                        sSearch: "@Resource.Txt_Search:",
                        searchPlaceholder: "@Resource.Txt_KeywordSearch",
                        sUrl: "",
                        sEmptyTable: "@Resource.Txt_DataEmpty",
                        sLoadingRecords: "@Resource.Txt_Loading...",
                        sInfoThousands: ",",
                        oPaginate: {
                            sFirst: "@Resource.Txt_First",
                            sPrevious: "@Resource.Txt_Previous",
                            sNext: "@Resource.Txt_Next",
                            sLast: "@Resource.Txt_Last"
                        },
                        oAria: {
                            sSortAscending: ": @Resource.Txt_Ascending",
                            sSortDescending: ": @Resource.Txt_Descending"
                        }
                    },
                    // 禁用自动调整列宽
                    autoWidth: false,
                    // 为奇偶行加上样式，兼容不支持CSS伪类的场合
                    stripeClasses: ["odd", "even"],
                    // 取消默认排序查询,否则复选框一列会出现小箭头
                    order: [],
                    // 隐藏加载提示,自行处理
                    processing: false,
                    // 启用服务器端分页
                    serverSide: true,
                    // 禁用原生搜索
                    searching: false
                },
                COLUMN: {
                    // 复选框单元格
                    CHECKBOX: {
                        "orderable": false,
                        "bSortable": false,
                        "data": "id",
                        "width": '30px',
                        "targets": 0,
                        "class": "dt-center",
                        "render": function (data, type, row, meta) {
                            var content = '';
                            content += '	<input type="checkbox" name="chkJobID" value="' + data + '" />';
                            return content;
                        }
                    }
                },
                // 回调
                CALLBACKS: {
                    // 表格绘制前的回调函数
                    PREDRAWCALLBACK: function (settings) {
                        if (settings.oInit.scrollX == '100%') {
                            // 给表格添加css类，处理scrollX : true出现边框问题
                            $(settings.nTableWrapper).addClass('dataTables_DTS');
                        }
                    },
                    INITCOMPLETE: function (settings, json) {
                        if (settings.oInit.scrollX == '100%' && $(settings.nTable).parent().innerWidth() - $(settings.nTable).outerWidth() > 5) {
                            $(settings.nScrollHead).children().width('100%');
                            $(settings.nTHead).parent().width('100%');
                            $(settings.nTable).width('100%');
                        }
                    },
                    // 表格每次重绘回调函数
                    DRAWCALLBACK: function (settings) {
                        if ($(settings.aoHeader[0][0].cell).find(':checkbox').length > 0) {
                            // 取消全选
                            $(settings.aoHeader[0][0].cell).find(':checkbox').prop('checked', false);
                        }
                        // 高亮显示当前行
                        $(settings.nTable).find("tbody tr").click(function (e) {
                            $(e.target).parents('table').find('tr').removeClass('warning');
                            $(e.target).parents('tr').addClass('warning');
                        });
                    }
                },
                // 常用render可以抽取出来，如日期时间、头像等
                RENDER: {
                    ELLIPSIS: function (data, type, row, meta) {
                        data = data || "";
                        return '<span title="' + data + '">' + data + '</span>';
                    }
                }

            }
        };
        var pageTableId = 'JobReturn', table;
        var columnDefs = [
            CONSTANT.DATA_TABLES.COLUMN.CHECKBOX,
            {
                "data": "ParentJobNum",
                "targets": 1},
            {
                "data": "PartNum",
                "targets": 2},
            {
                "data": "PartDescription",
                "targets": 3},
            {
                "data": "DrawNum",
                "targets": 4},
            {
                "data": "ProdQty",
                "targets": 5,
                "render": function (data, type, row, meta) {
                    return Math.round(data);
                }
            },
            {
                "data": "SplitOpr",
                "targets": 6,
                "render": function (data, type, row, meta) {
                    return data + ":" + row["OpDesc"];
                }
            },
            {
                "data": "DiscrepReason",
                "targets": 7 },
            {
                "data": "ParentJobNum",
                "orderable": false,
                "width": '90px',
                "targets": 8,
                "render": function (data, type, row, meta) {
                    return '<a href="javascript:openJobReturnView(\'' + row["id"] + '\',\'' + row["ParentJobNum"] + '\')">@Resource.Txt_Create</a>';
                }
            }
        ];

        $(document).ready(function () {
            var dtSearch = {};
            dtSearch.SearchBy = "";
            dtSearch.Value = "";

            loadDataTable();

            $("#myTable_filter").hide();

            $('#myTable').on('draw.dt', function () {
                $('input[type="checkbox"]').iCheck({
                    handle: 'checkbox',
                    checkboxClass: 'icheckbox_flat-red',
                    radioClass: 'iradio_flat-red'
                });

                $("input[name='chkBatchJobSelect']").iCheck('uncheck');

                $("input[name='chkBatchJobSelect']").on('ifChecked', function (event) {
                    $("input[name='chkJobID']").iCheck('check')
                });

                $("input[name='chkBatchJobSelect']").on('ifUnchecked', function (event) {
                    $("input[name='chkJobID']").iCheck('uncheck')
                });

            });



            $("#searchOptions a").click(function () {

                var getSearchByText = $(this).text().trim();
                var getSearchByValue = $(this).attr("data-searchby");

                $("#searchByTitle").text(getSearchByText);
                $("#SearchBy").val(getSearchByValue);

                if (getSearchByValue == "Date") {
                    $("#SearchKeywords").daterangepicker({
                        locale: {
                            format: 'YYYY/MM/DD'
                        }
                    });

                    $("#SearchKeywords").attr("readonly", "readonly").focus();
                } else {
                    if ($("#SearchKeywords").data('daterangepicker') != undefined) {
                        $("#SearchKeywords").data('daterangepicker').remove();
                    }
                    $("#SearchKeywords").removeAttr("readonly").val("").focus();
                }


            });

            $('#SearchKeywords').on("keypress", function () {
                if (event.keyCode == "13") {
                    event.preventDefault();
                    $("#btnSearch").click();
                }
            });

            $("#btnModalSave").click(function () {
                createReworkJob();
            });

            $("#btnModalSpliet").click(function () {
                var param = {};
                param.id = $("#txtModalJobId").val();
                param.copys = $("#txtModalSplitQty").val();

                var parnt = /^\+?[1-9][0-9]*$/;
                if (!parnt.exec(param.copys) || param.copys == "0") {
                    showAlert("@Resource.Txt_EnterValidBatchQuantity");
                    return;
                }

                swal({
                    title: '@Resource.Txt_SplitEpicorJobnumConfirm?',
                    text: '@Resource.Txt_NoRollbackSplitted!',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '@Resource.Txt_Confirm',
                    cancelButtonText: '@Resource.Txt_Cancel',
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    buttonsStyling: false
                }).then(function (isConfirm) {
                    if (isConfirm.value === true) {
                        $.post("/JobSplit/SetSplitCopys", param, function (data) {
                            jobNumList = [];
                            jobNumList.push($("#txtModalJobId").val());

                            @*$.ajax({
                                type: "POST",
                                url: "/JobSplit/EpicorJobSplit",
                                async: false,
                                dataType: "json",
                                data: { "jobList": jobNumList },
                                success: function (data) {
                                    $("#ModalSetSplitCopys").modal("hide");
                                    $('#myTable').DataTable().draw();

                                    swal(
                                        '@Resource.Txt_Splitted!',
                                        '@Resource.Txt_SplitJobnumSucceeded.',
                                        'success'
                                    );
                                },
                                error: function (e) {
                                    var startTitle = e.responseText.indexOf('<title>') + 7;
                                    var endTitle = e.responseText.indexOf('</title>');
                                    swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                                }
                            });*@

                            $.post("/JobSplit/EpicorJobSplit", { "jobList": jobNumList }, function (data) {
                                $("#ModalSetSplitCopys").modal("hide");
                                $('#myTable').DataTable().draw();

                                swal(
                                    '@Resource.Txt_Splitted!',
                                    '@Resource.Txt_SplitJobnumSucceeded.',
                                    'success'
                                );
                            }).error(function (e) {
                                var startTitle = e.responseText.indexOf('<title>') + 7;
                                var endTitle = e.responseText.indexOf('</title>');
                                swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                            });

                        });

                    }
                });
            });

            $("#btnRefresh").click(function () {
                var table = $('#myTable').DataTable();
                var searchby = $("#SearchBy").val();
                var searchvalue = $("#SearchKeywords").val();

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");

                table.search(searchvalue);
                table.draw();
            });

            $("#btnSplit").click(function () {
                jobNumList = [];
                $("input[name='chkJobID']:checked").each(function () {
                    jobNumList.push(this.value);
                });

                swal({
                    title: '@Resource.Txt_SplitEpicorJobnumConfirm?',
                    text: '@Resource.Txt_NoRollbackSplitted!',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '@Resource.Txt_Confirm',
                    cancelButtonText: '@Resource.Txt_Cancel',
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    buttonsStyling: false
                }).then(function (isConfirm) {
                    if (isConfirm.dismiss === 'cancel') {
                        //swal(
                        //  '已取消！',
                        //  '工单拆分已取消 :)',
                        //  'error'
                        //);
                    } else {
                        @*$.ajax({
                            type: "POST",
                            url: "/JobSplit/EpicorJobSplit",
                            async: false,
                            dataType: "json",
                            data: { "jobList": jobNumList },
                            success: function (data) {
                                $('#myTable').DataTable().draw();
                                swal(
                                    '@Resource.Txt_Splitted!',
                                    '@Resource.Txt_SplitJobnumSucceeded.',
                                    'success'
                                );
                            },
                            error: function (e) {
                                var startTitle = e.responseText.indexOf('<title>') + 7;
                                var endTitle = e.responseText.indexOf('</title>');
                                swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                            }
                        });*@

                        $.post("/JobSplit/EpicorJobSplit", { "jobList": jobNumList }, function (data) {
                            $('#myTable').DataTable().draw();
                            swal(
                                '@Resource.Txt_Splitted!',
                                '@Resource.Txt_SplitJobnumSucceeded.',
                                'success'
                            );
                        }).error(function (e) {
                            var startTitle = e.responseText.indexOf('<title>') + 7;
                            var endTitle = e.responseText.indexOf('</title>');
                            swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                        });
                    }

                });


            });


            $("#btnShowAll").click(function () {
                var table = $('#myTable').DataTable();
                var searchby = $("#SearchBy").val();
                var searchvalue = "";
                $("#SearchKeywords").val("");

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");

                table.search(searchvalue);
                table.draw();
            });

            $("#btnSearch").click(function () {
                var table = $('#myTable').DataTable();
                var searchby = $("#SearchBy").val();
                var searchvalue = $("#SearchKeywords").val();

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");

                if (searchby == "" || searchby == "All") {
                    table.search(searchvalue);
                    table.draw();
                } else {
                    switch (searchby) {
                        case "ParentJobNum":
                            table.columns(0).search(searchvalue);
                            break;
                        case "PartNum":
                            table.columns(1).search(searchvalue);
                            break;
                        case "PartDescription":
                            table.columns(2).search(searchvalue);
                            break;
                        default:
                            break;
                    }

                    table.draw();
                }
                if (searchby != "Date") {
                    $("#SearchKeywords").focus();
                }

            });

            $('#ModalSetSplitCopys').on('shown.bs.modal', function (e) {
                $(this).css('display', 'block');
                var modalHeight = $(window).height() / 2 - $('#ModalSetSplitCopys .modal-dialog').height() / 2;
                $(this).find('.modal-dialog').css({
                    'margin-top': modalHeight
                });
            });

            $(".box").orso({
                boxl: ".box_l",//左边大盒子
                boxr: ".box_r",//右边大盒子
                boxlrX: "li",//移动小盒子
                boxon: "choose",//点击添加属性
                idclass: true,//添加的属性是否为class//true=class; false=id;
                boxlan: "#left",//单个向左移动按钮
                boxran: "#right",//单个向右移动按钮
                boxtan: "#top",//单个向上移动按钮
                boxban: "#bottom",//单个向下移动按钮
                boxalllan: "#allleft",//批量向左移动按钮
                boxallran: "#allright",//批量向右移动按钮
                boxalltan: "#alltop",//移动第一个按钮
                boxallban: "#allbottom"//移动最后一个按钮
            })

        });

        function loadDataTable() {
            setUserColumnsDefWidths(pageTableId, columnDefs);

            table = $('#myTable').DataTable(
                {
                    language: {
                        "sProcessing": "@Resource.Txt_Processing...",
                        "sLengthMenu": "@Resource.Txt_DisplayResults",
                        "sZeroRecords": "@Resource.Txt_NoMatchedResults",
                        "sInfo": "@Resource.Txt_DisplayAreaResults",
                        "sInfoEmpty": "@Resource.Txt_DisplayAreaResults2",
                        "sInfoFiltered": "(@Resource.Txt_FilterResults)",
                        "sInfoPostFix": "",
                        "sSearch": "@Resource.Txt_Search:",
                        "sUrl": "",
                        "sEmptyTable": "@Resource.Txt_DataEmpty",
                        "sLoadingRecords": "@Resource.Txt_Loading...",
                        "sInfoThousands": ",",
                        "oPaginate": {
                            "sFirst": "@Resource.Txt_First",
                            "sPrevious": "@Resource.Txt_Previous",
                            "sNext": "@Resource.Txt_Next",
                            "sLast": "@Resource.Txt_Last"
                        },
                        "oAria": {
                            "sSortAscending": ": @Resource.Txt_Ascending",
                            "sSortDescending": ": @Resource.Txt_Descending"
                        }
                    },
                    "processing": true,
                    "serverSide": true,
                    "searching": true,
                    "ajax": {
                        "url": "/JobReturn/GetReturnJobList",
                        "type": "POST",
                        "error": function (e) {
                            var startTitle = e.responseText.indexOf('<title>') + 7;
                            var endTitle = e.responseText.indexOf('</title>');
                            swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                        }
                    },
                    destroy: true,
                    scrollY: 400,
                    scrollX: true,
                    scrollCollapse: true,
                    scroller: true,
                    initComplete: function (settings) {
                        //Add JQueryUI resizable functionality to each th in the ScrollHead table
                        $('#myTable_wrapper .dataTables_scrollHead thead th').resizable({
                            handles: "e",
                            alsoResize: '#myTable_wrapper .dataTables_scrollHead table', //Not essential but makes the resizing smoother
                            stop: function () {
                                saveColumnSettings(pageTableId, table);
                                loadDataTable();
                            }
                        });
                    },
                    "autoWidth": false,
                    "bAutoWidth": false,
                    "order": [[1, 'asc']],//设置第二列为升序，如果不设置order，则默认会按第一列升序，这样Checkbox旁边会出现一个排序的小三角
                    "columns": columnDefs
                });
        }

        function openJobReturnView(id, jobNum) {
            var param = {};
            //param.jobNum = $("#epicorjobnum").val();
            param.jobNum = jobNum;

            $.post("/JobReturn/GetReworkOpers", param, function (data) {
                $("#allleft").trigger("click");
                resetOperSelector();
                $('#modal-alert').remove();

                $("#reworkjobid").val(id)
                $("#epicorjobnum").val(jobNum);
                for (var i = 0; i < data.length; i++) {
                    $(".box_l").find("li").each(function () {
                        if ($(this).text() == data[i].OpCode) {
                            $(this).appendTo(".box_r");
                        }
                    });
                }
                $("#ModalJobRetrun").modal();
            });



        }

        function createReworkJob() {
            var param = {};
            var opers = new Array();

            $(".box_r").find("li").each(function () {
                //opers.push($(this).html());
                opers.push($(this).html().split(':')[0]);
            })

            if (opers.length == 0) {
                showAlert("@Resource.Txt_ReserveOneOP");
                return;
            }



            swal({
                title: '@Resource.Txt_CreateReworkJobnumConfirm？',
                text: '',
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@Resource.Txt_Confirm',
                cancelButtonText: '@Resource.Txt_Cancel',
                confirmButtonClass: 'btn btn-success',
                cancelButtonClass: 'btn btn-danger',
                buttonsStyling: false
            }).then(function (isConfirm) {
                if (isConfirm.value === true) {
                    param.id = $("#reworkjobid").val();
                    param.jobNum = $("#epicorjobnum").val();
                    param.opers = opers;

                    @*$.ajax({
                        type: "POST",
                        url: "/JobReturn/CreateReworkJob",
                        async: false,
                        dataType: "json",
                        data: param,
                        success: function (getResponse) {
                            $("#ModalJobRetrun").modal("hide");
                            var getData = getResponse.Data;

                            swal({
                                title: '@Resource.Txt_CreateReworkJobnumSucceeded',
                                text: '@Resource.Txt_JobNum : ' + getData.JobNum,
                                type: 'success',
                                showCancelButton: false,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: '@Resource.Txt_Confirm',
                                //cancelButtonText: '关闭',
                                confirmButtonClass: 'btn btn-success',
                                cancelButtonClass: 'btn btn-danger',
                                buttonsStyling: true
                            });
                        },
                        error: function (e) {
                            var startTitle = e.responseText.indexOf('<title>') + 7;
                            var endTitle = e.responseText.indexOf('</title>');
                            swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                        }
                    });*@

                    $.post("/JobReturn/CreateReworkJob", param, function (getResponse) {
                        $("#ModalJobRetrun").modal("hide");

                        var getData = getResponse.Data;
                        /*
                        swal(
                            '返工工单创建成功！',
                            '工单号 : ' + data,
                            'success'
                        );
                        */

                        swal({
                            title: '@Resource.Txt_CreateReworkJobnumSucceeded',
                            text: '@Resource.Txt_JobNum : ' + getData.JobNum,
                            type: 'success',
                            showCancelButton: false,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: '@Resource.Txt_Confirm',
                            //cancelButtonText: '关闭',
                            confirmButtonClass: 'btn btn-success',
                            cancelButtonClass: 'btn btn-danger',
                            buttonsStyling: true
                        }).then(function () {


                        });
                    }).error(function (e) {
                        var startTitle = e.responseText.indexOf('<title>') + 7;
                        var endTitle = e.responseText.indexOf('</title>');
                        swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                    });

                }
            });



        }

        function resetOperSelector() {
            var opers = new Array();
        }
    </script>
}



