@using WebAdmin.Models;
@using Resources;
@{
    ViewBag.Title = Resource.Txt_MRBProcessing;
    List<string> vendors = (List<string>)(ViewBag.Vendors);
    List<SimpleDiscrepReason> MRBReasons = (List<SimpleDiscrepReason>)(ViewBag.MRBReasons);
}

@section style{
    <link rel="stylesheet" type="text/css" href="~/Content/plugins/iCheck/all.css" />
}

<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-5">
                @*<h4 class="card-title">Epicor MO List</h4>
                    <h6 class="card-subtitle">All MO from Epcior list here</h6>*@
                <h3>
                    <button class="btn btn-info" type="button" id="btnRefresh"><i class="fa fa-refresh"></i> @Resource.Txt_Refresh</button>
                    @*<button class="btn btn-info" type="button" id="btnConfirm"><i class="fa fa-edit"></i> 确认</button>*@
                </h3>
            </div>
            <div class="col-md-7">
                <form class="input-form" id="DoSearch">
                    <div class="input-group pull-right">
                        <div class="input-group-btn">
                            <button type="button" id="searchByTitle" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @Resource.Txt_All
                            </button>
                            <input type="hidden" name="SearchBy" id="SearchBy">
                            <div class="dropdown-menu" x-placement="top-start" style="position: absolute; transform: translate3d(0px, -2px, 0px); top: 0px; left: 0px; will-change: transform;" id="searchOptions">
                                <a class="dropdown-item" href="javascript:;" data-searchby="MRBNum">@Resource.Txt_MRBNo</a>
                                <a class="dropdown-item" href="javascript:;" data-searchby="JobNum">@Resource.Txt_JobNum</a>
                                <a class="dropdown-item" href="#" data-searchby="Status">@Resource.Txt_Status</a>
                                <div role="separator" class="dropdown-divider"></div>
                                <a class="dropdown-item" href="javascript:;" data-searchby="All">@Resource.Txt_All</a>
                            </div>
                        </div>
                        <input type="text" class="form-control" autocomplete="off" aria-label="Text input with dropdown button" id="SearchKeywords" name="SearchKeywords">
                        <datalist id="SplitList">
                            <option value="@Resource.Txt_Unhandled"></option>
                            <option value="@Resource.Txt_Handled"></option>
                        </datalist><span class="input-group-btn">
                            <button class="btn btn-secondary" type="button" id="btnSearch"><i class="fa fa-search"></i> @Resource.Txt_Query</button>
                            <button class="btn btn-info" type="button" id="btnShowAll"><i class="fa fa-list"></i> @Resource.Txt_All</button>
                        </span>
                    </div>
                </form>
            </div>
        </div>
        <div class="table-responsive">
            <table id="myTable" class="bordered" width="100%">
                <thead>
                    <tr role="row">
                        <th>
                            <input type="checkbox" name="chkBatchJobSelect" />
                        </th>
                        <th>@Resource.Txt_MRBNo</th>
                        <th>@Resource.Txt_JobNum</th>
                        <th>@Resource.Txt_OP</th>
                        <th>@Resource.Txt_OPDescription</th>
                        <th>@Resource.Txt_MRBQuantity</th>
                        <th>@Resource.Txt_MRBReason</th>
                        <th>@Resource.Txt_Status</th>
                        <th>@Resource.Txt_Operation</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>


<div class="modal fade" id="ModalShipment" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title" id="myModalLabel">@Resource.Txt_MRBProcessing</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                <form role="form">
                    <div class="card-body">
                        <div class="row form-group">
                            <div class="col-2">
                                <label for="exampleInputEmail1">@Resource.Txt_MRBNo</label>
                                <p id="txtModalMRBNum"></p>
                            </div>
                            <div class="col-4">
                                <label for="exampleInputEmail1">@Resource.Txt_JobNum</label>
                                <p id="txtModalJobNum"></p>
                            </div>
                            <div class="col-2">
                                <label for="exampleInputEmail1">@Resource.Txt_OP</label>
                                <p id="txtModalOprSeq"></p>
                            </div>
                            <div class="col-4">
                                <label for="exampleInputEmail1">@Resource.Txt_OPDescription</label>
                                <p id="txtModalOprDesc"></p>
                            </div>
                        </div>

                        <div class="row form-group">
                            <div class="col-2">
                                <label for="exampleInputPassword1">@Resource.Txt_MRBQuantity</label>
                                <p id="txtModalDiscrepQty"></p>
                            </div>
                            <div class="col-4">
                                <label for="exampleInputPassword1">@Resource.Txt_MRBReason</label>
                                <p id="txtModalReason"></p>
                            </div>
                            <div class="col-6">
                                <label>@Resource.Txt_MRBReasonConfirm</label>
                                <input type="text" class="form-control" id="txtModalMRBReason" list="MRBReasonList" />
                                <datalist id="MRBReasonList">
                                    @foreach (SimpleDiscrepReason MRBReason in MRBReasons)
                                    {
                                        <option value="@MRBReason.MRBReasonCode-@MRBReason.MRBReasonDesc"></option>
                                    }
                                </datalist>
                            </div>
                        </div>

                        <div class="row form-group">
                            <div class="col-2">
                                <label for="exampleInputPassword1">@Resource.Txt_ReworkQuantity</label>
                                <input type="text" class="form-control" id="txtModalReworkQty" />
                            </div>
                            <div class="col-4">
                                <label for="exampleInputPassword1">@Resource.Txt_ScrapQuantity</label>
                                <input type="text" class="form-control" id="txtModalScrapQty" />
                            </div>
                            <div class="col-2">
                                <label for="exampleInputPassword1">@Resource.Txt_OP</label>
                                <input type="text" class="form-control" id="txtModalOSRemarkOper" list="OperList" />
                                <datalist id="OperList">
                                    <option value=""></option>
                                </datalist>
                            </div>
                            <div class="col-4">
                                <label for="exampleInputPassword1">@Resource.Txt_Vendor</label>
                                <input type="text" class="form-control" id="txtModalOSRemarkVendor" list="VendorList" />
                                <datalist id="VendorList">
                                    @foreach (string vendor in vendors)
                                    {
                                        <option value="@vendor"></option>
                                    }
                                </datalist>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-2">
                                <label for="exampleInputPassword1">@Resource.Txt_Classification</label>
                                <input type="text" class="form-control" id="txtModalCategory" list="CateList" />
                                <datalist id="CateList">
                                    <option value="@Resource.Txt_FE"></option>
                                    <option value="@Resource.Txt_BE"></option>
                                    <option value="@Resource.Txt_OutSource"></option>
                                </datalist>
                            </div>
                            <div class="col-4">
                                <label for="exampleInputPassword1">@(Resource.Txt_Remarks)（@Resource.Txt_SizeOutofTolerance）</label>
                                <input type="text" class="form-control" id="txtModalSizedetail" list="OperList" />
                                <datalist id="OperList">
                                    <option value=""></option>
                                </datalist>
                            </div>
                            <div class="col-6">
                                <label>@Resource.Txt_ScrapPartNum</label>
                                <input type="text" class="form-control" id="txtModalScrapPartNum" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <input type="checkbox" name="chkRole" id="chkModalDebitNote" />
                                <label>DebitNote</label>
                                <input type="hidden" id="txtModalDebitNote" value="0" />
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btnModalClose" type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> @Resource.Txt_Close</button>
                <button id="btnModalSave" type="button" class="btn btn-default"><i class="fa fa-save"></i> @Resource.Txt_Save</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal -->
</div>

@section script {
    <script src="~/Content/plugins/iCheck/icheck.js"></script>
    <script>
        var _clicked = false;
        var CONSTANT = {
            // datatables常量
            DATA_TABLES: {
                DEFAULT_OPTION: { // DataTables初始化选项
                    LANGUAGE: {
                        sProcessing: "@Resource.Txt_Processing...",
                        sLengthMenu: "@Resource.Txt_DisplayResults",
                        sZeroRecords: "@Resource.Txt_NoMatchedResults",
                        sInfo: "@Resource.Txt_DisplayAreaResults",
                        sInfoEmpty: "@Resource.Txt_DisplayAreaResults2",
                        sInfoFiltered: "(@Resource.Txt_FilterResults)",
                        sInfoPostFix: "",
                        sSearch: "@Resource.Txt_Search:",
                        searchPlaceholder: "@Resource.Txt_KeywordSearch",
                        sUrl: "",
                        sEmptyTable: "@Resource.Txt_DataEmpty",
                        sLoadingRecords: "@Resource.Txt_Loading...",
                        sInfoThousands: ",",
                        oPaginate: {
                            sFirst: "@Resource.Txt_First",
                            sPrevious: "@Resource.Txt_Previous",
                            sNext: "@Resource.Txt_Next",
                            sLast: "@Resource.Txt_Last"
                        },
                        oAria: {
                            sSortAscending: ": @Resource.Txt_Ascending",
                            sSortDescending: ": @Resource.Txt_Descending"
                        }
                    },
                    // 禁用自动调整列宽
                    autoWidth: false,
                    // 为奇偶行加上样式，兼容不支持CSS伪类的场合
                    stripeClasses: ["odd", "even"],
                    // 取消默认排序查询,否则复选框一列会出现小箭头
                    order: [],
                    // 隐藏加载提示,自行处理
                    processing: false,
                    // 启用服务器端分页
                    serverSide: true,
                    // 禁用原生搜索
                    searching: false
                },
                COLUMN: {
                    // 复选框单元格
                    CHECKBOX: {
                        "orderable": false,
                        "bSortable": false,
                        "data": "id",
                        "width": '30px',
                        "targets": 0,
                        "class": "dt-center",
                        "render": function (data, type, row, meta) {
                            var content = '';
                            content += '	<input type="checkbox" name="chkJobID" value="' + data + '" Status="' + row["Status"] + '" />';
                            return content;
                        }
                    }
                },
                // 回调
                CALLBACKS: {
                    // 表格绘制前的回调函数
                    PREDRAWCALLBACK: function (settings) {
                        if (settings.oInit.scrollX == '100%') {
                            // 给表格添加css类，处理scrollX : true出现边框问题
                            $(settings.nTableWrapper).addClass('dataTables_DTS');
                        }
                    },
                    INITCOMPLETE: function (settings, json) {
                        if (settings.oInit.scrollX == '100%' && $(settings.nTable).parent().innerWidth() - $(settings.nTable).outerWidth() > 5) {
                            $(settings.nScrollHead).children().width('100%');
                            $(settings.nTHead).parent().width('100%');
                            $(settings.nTable).width('100%');
                        }
                    },
                    // 表格每次重绘回调函数
                    DRAWCALLBACK: function (settings) {
                        if ($(settings.aoHeader[0][0].cell).find(':checkbox').length > 0) {
                            // 取消全选
                            $(settings.aoHeader[0][0].cell).find(':checkbox').prop('checked', false);
                        }
                        // 高亮显示当前行
                        $(settings.nTable).find("tbody tr").click(function (e) {
                            $(e.target).parents('table').find('tr').removeClass('warning');
                            $(e.target).parents('tr').addClass('warning');
                        });
                    }
                },
                // 常用render可以抽取出来，如日期时间、头像等
                RENDER: {
                    ELLIPSIS: function (data, type, row, meta) {
                        data = data || "";
                        return '<span title="' + data + '">' + data + '</span>';
                    }
                }

            }

        };
        var pageTableId = 'MRBProcessList', table;
        var columnDefs = [
            CONSTANT.DATA_TABLES.COLUMN.CHECKBOX,
            {
                "data": "id",
                "targets": 1
            },
            {
                "data": "JobNum",
                "targets": 2
            },
            {
                "data": "OprSeq",
                "targets": 3,
                "render": function (data, type, row, meta) {
                    return row["OprSeq"] + ":" + row["OpCode"];
                }
            },
            {
                "data": "OprDesc",
                "targets": 4
            },
            {
                "data": "Quantity",
                "targets": 5
            },
            {
                "data": "ReasonDesc",
                "targets": 6
            },
            {
                "data": "Status",
                "targets": 7,
                "render": function (data, type, row, meta) {
                    var result = "";
                    if (data == 1) {
                        result = "@Resource.Txt_Unhandled";
                    } else if (data == 2) {
                        result = "@Resource.Txt_Handled";
                    }
                    return result;
                }
            },
            {
                "data": "id",
                "orderable": false,
                "width": '90px',
                "targets": 8,
                "render": function (data, type, row, meta) {
                    if (row["Status"] == 2) {
                        return "";
                    } else {
                        return '<a href="javascript:openDetailView(\'' + row["id"] + '\',\'' + row["JobNum"] + '\',\'' + row["OprSeq"] + '\',\'' + row["OpCode"] + '\',\'' + row["OprDesc"] + '\',\'' + row["Quantity"] + '\',\'' + row["ReasonCode"] + '\',\'' + row["ReasonDesc"] + '\',\'' + row["VendorNum"] + '\',\'' + row["VendorName"] + '\')">@Resource.Txt_Handle</a>';
                    }
                }
            },
            {
                "data": "VendorNum",
                "visible": false,
                "targets": 9
            },
            {
                "data": "VendorName",
                "visible": false,
                "targets": 10
            }
        ];

        $(document).ready(function () {
            loadDataTable();
            $("#myTable_filter").hide();

            $('#myTable').on('draw.dt', function () {
                $('input[type="checkbox"]').iCheck({
                    handle: 'checkbox',
                    checkboxClass: 'icheckbox_flat-red',
                    radioClass: 'iradio_flat-red'
                });

                $("input[name='chkBatchJobSelect']").iCheck('uncheck');

                $("input[name='chkBatchJobSelect']").on('ifChecked', function (event) {
                    $("input[name='chkJobID']").iCheck('check')
                });

                $("input[name='chkBatchJobSelect']").on('ifUnchecked', function (event) {
                    $("input[name='chkJobID']").iCheck('uncheck')
                });

            });

            $("#searchOptions a").click(function () {

                var getSearchByText = $(this).text().trim();
                var getSearchByValue = $(this).attr("data-searchby");

                $("#searchByTitle").text(getSearchByText);
                $("#SearchBy").val(getSearchByValue);

                if (getSearchByValue == "Status") {
                    $("#SearchKeywords").attr("list", "SplitList");
                } else {
                    $("#SearchKeywords").removeAttr("list");
                    $("#SearchKeywords").val("").focus();
                }


            });

            $('#SearchKeywords').on("keypress", function () {
                if (event.keyCode == "13") {
                    event.preventDefault();
                    $("#btnSearch").click();
                }
            });

            $("#btnRefresh").click(function () {
                var table = $('#myTable').DataTable();
                var searchby = $("#SearchBy").val();
                var searchvalue = $("#SearchKeywords").val();

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");

                table.search(searchvalue);
                table.draw();
            });

            $("#btnShowAll").click(function () {
                var table = $('#myTable').DataTable();
                var searchvalue = "";

                $("#SearchKeywords").val("");

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");

                table.search(searchvalue);
                table.draw();
            });

            $("#btnSearch").click(function () {
                var table = $('#myTable').DataTable();
                var searchby = $("#SearchBy").val();
                var searchvalue = $("#SearchKeywords").val();

                table.search("");
                table.columns(0).search("");
                table.columns(1).search("");
                table.columns(2).search("");

                if (searchby == "" || searchby == "All") {
                    table.search(searchvalue);
                    table.draw();
                } else {
                    switch (searchby) {
                        case "MRBNum":
                            table.columns(0).search(searchvalue);
                            break;
                        case "JobNum":
                            table.columns(1).search(searchvalue);
                            break;
                        case "Status":
                            table.columns(2).search(searchvalue);
                            break;
                        default:
                            break;
                    }

                    table.draw();
                }
                if (searchby != "Date") {
                    $("#SearchKeywords").focus();
                }

            });

            $("#btnConfirm").click(function () {
                jobNumList = [];
                $("input[name='chkJobID']:checked").each(function () {
                    jobNumList.push(this.value);
                });

                swal({
                    title: '@Resource.Txt_OutRecordConfirm？',
                    text: '@Resource.Txt_NoRollbackConfirmed!',
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '@Resource.Txt_Confirm',
                    cancelButtonText: '@Resource.Txt_Cancel',
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    buttonsStyling: false
                }).then(function (isConfirm) {
                    if (isConfirm.dismiss === 'cancel') {
                    } else {
                        $.ajax({
                            type: "POST",
                            url: "/Subcontract/ConfirmShipment",
                            async: false,
                            dataType: "json",
                            data: { "jobList": jobNumList },
                            success: function (data) {
                                $('#myTable').DataTable().draw();
                                swal(
                                    '@Resource.Txt_Confirmed!',
                                    '@Resource.Txt_OutRecordConfirmSucceeded。',
                                    'success'
                                );
                            },
                            error: function (e) {
                                var startTitle = e.responseText.indexOf('<title>') + 7;
                                var endTitle = e.responseText.indexOf('</title>');
                                swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                            }
                        });

                        @*$.post("/Subcontract/ConfirmShipment", { "jobList": jobNumList }, function (data) {
                            $('#myTable').DataTable().draw();
                            swal(
                                '@Resource.Txt_Confirmed!',
                                '@Resource.Txt_OutRecordConfirmSucceeded。',
                                'success'
                            );
                        });*@
                    }

                });
            });

            $("#btnModalSave").click(function () {
                submitMRPProcess();
            });
            $('#chkModalDebitNote').on('ifChanged', function (event) {
                if ($("#txtModalDebitNote").val() == "1") {
                    $("#txtModalDebitNote").val("0");
                } else {
                    $("#txtModalDebitNote").val("1");
                }

            });
        });

        function loadDataTable() {
            setUserColumnsDefWidths(pageTableId, columnDefs);

            table = $('#myTable').DataTable({
                language: {
                    "sProcessing": "@Resource.Txt_Processing...",
                    "sLengthMenu": "@Resource.Txt_DisplayResults",
                    "sZeroRecords": "@Resource.Txt_NoMatchedResults",
                    "sInfo": "@Resource.Txt_DisplayAreaResults",
                    "sInfoEmpty": "@Resource.Txt_DisplayAreaResults2",
                    "sInfoFiltered": "(@Resource.Txt_FilterResults)",
                    "sInfoPostFix": "",
                    "sSearch": "@Resource.Txt_Search:",
                    "sUrl": "",
                    "sEmptyTable": "@Resource.Txt_DataEmpty",
                    "sLoadingRecords": "@Resource.Txt_Loading...",
                    "sInfoThousands": ",",
                    "oPaginate": {
                        "sFirst": "@Resource.Txt_First",
                        "sPrevious": "@Resource.Txt_Previous",
                        "sNext": "@Resource.Txt_Next",
                        "sLast": "@Resource.Txt_Last"
                    },
                    "oAria": {
                        "sSortAscending": ": @Resource.Txt_Ascending",
                        "sSortDescending": ": @Resource.Txt_Descending"
                    }
                },
                destroy: true,
                scrollY: 400,
                scrollX: true,
                scrollCollapse: true,
                scroller: true,
                initComplete: function (settings) {
                    //Add JQueryUI resizable functionality to each th in the ScrollHead table
                    $('#myTable_wrapper .dataTables_scrollHead thead th').resizable({
                        handles: "e",
                        alsoResize: '#myTable_wrapper .dataTables_scrollHead table', //Not essential but makes the resizing smoother
                        stop: function () {
                            saveColumnSettings(pageTableId, table);
                            loadDataTable();
                        }
                    });
                },
                "autoWidth": false,
                "bAutoWidth": false,
                "processing": true,
                "serverSide": true,
                "searching": true,
                "ajax": {
                    "url": "/MRB/GetMRBProcessListNew",
                    "type": "POST",
                    "error": function (e) {
                        var startTitle = e.responseText.indexOf('<title>') + 7;
                        var endTitle = e.responseText.indexOf('</title>');
                        swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                    }
                },
                "order": [[1, 'asc']],//设置第二列为升序，如果不设置order，则默认会按第一列升序，这样Checkbox旁边会出现一个排序的小三角
                "columns": columnDefs
            });
        }

        function openDetailView(id, JobNum, OprSeq, OpCode, OprDesc, Quantity, ReasonCode, ReasonDesc, VendorNum, VendorName) {
            $('.alert-message').remove();
            $("#txtModalMRBNum").html(id);
            $("#txtModalJobNum").html(JobNum);
            $("#txtModalOprSeq").html(OprSeq + ":" + OpCode);
            $("#txtModalOprDesc").html(OprDesc);
            $("#txtModalDiscrepQty").html(Quantity);
            $("#txtModalReason").html(ReasonDesc);
            $("#txtModalDebitNote").val("0");
            $("#chkModalDebitNote").iCheck("uncheck");
            $("#txtModalReworkQty").val("");
            $("#txtModalScrapQty").val("");
            $("#txtModalOSRemarkVendor").val("");
            $("#txtModalOSRemarkOper").val("");
            $("#txtModalCategory").val("");
            $("#txtModalSizedetail").val("");
            $('#txtModalMRBReason').val("");
            $('#txtModalScrapPartNum').val("");

            //if (VendorNum != "") {
            //    $("#txtModalOSVendor").html(VendorName);
            //    $("#divOSVendorInfo").show();
            //} else {
            //    $("#txtModalOSVendor").html("");
            //    $("#divOSVendorInfo").hide();
            //}

            $("#ModalShipment").modal();
        }

        function submitMRPProcess() {
            console.log(1);
            if (_clicked) {
                console.log("xreturn");
                return;
            }
            console.log(2);
            _clicked = true;
            var param = {};
            param.MRBNum = $("#txtModalMRBNum").html();
            param.JobNum = $("#txtModalJobNum").html();
            param.ReworkQty = $("#txtModalReworkQty").val();
            param.ScrapQty = $("#txtModalScrapQty").val();
            param.DebitNote = $("#txtModalDebitNote").val();
            param.VendorRemark = $("#txtModalOSRemarkVendor").val();
            param.OperRemark = $("#txtModalOSRemarkOper").val();
            param.Category = $("#txtModalCategory").val();
            param.Remark = $("#txtModalSizedetail").val();
            param.MRBReason = $('#txtModalMRBReason').val();
            param.ScrapPartNum = $('#txtModalScrapPartNum').val();

            var DiscrepQty = $("#txtModalDiscrepQty").html();

            var re = /^[0-9]+.?[0-9]*$/;

            if (param.ReworkQty == "") {
                showAlert("@Resource.Txt_ReworkQuantityNoEmpty");
                return;
            }

            if (!re.test(param.ReworkQty)) {
                showAlert("@Resource.Txt_ReworkQuantityPositive");
                return;
            }

            if (param.ScrapQty == "") {
                showAlert("@Resource.Txt_ScrapQuantityNoEmpty");
                return;
            }

            if (!re.test(param.ScrapQty)) {
                showAlert("@Resource.Txt_ScrapQuantityPositive");
                return;
            }

            if (parseInt(DiscrepQty) != parseInt(param.ReworkQty) + parseInt(param.ScrapQty)) {
                showAlert("@Resource.Txt_ReworkScrapEqualMRB");
                return;
            }

            $.ajax({
                type: "POST",
                url: "/MRB/UpdateMRBProcess",
                async: false,
                dataType: "json",
                data: param,
                success: function (data) {
                    $("#ModalShipment").modal("hide");
                    $('#myTable').DataTable().draw();
                    _clicked = false;
                    swal('@Resource.Txt_ProcessingSucceeded!', '', 'success');
                },
                error: function (e) {
                    var startTitle = e.responseText.indexOf('<title>') + 7;
                    var endTitle = e.responseText.indexOf('</title>');
                    swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                }
            });

            @*$.post("/MRB/UpdateMRBProcess", param, function (data) {
                $("#ModalShipment").modal("hide");
                $('#myTable').DataTable().draw();
                _clicked = false;
                swal('@Resource.Txt_ProcessingSucceeded!', '', 'success');
            });*@
        }
    </script>
}
