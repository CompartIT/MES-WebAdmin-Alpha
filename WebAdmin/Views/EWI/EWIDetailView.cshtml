@using WebAdmin.Models;
@using Resources;
@{
    ViewBag.Title = Resource.Menu_EWIMgmt;
    ViewBag.Item = Resource.Txt_EWIRevisionDetail;
    string urlPrefix = string.Format("{0}://{1}:{2}/", Request.Url.Scheme, Request.Url.Host, Request.Url.Port);
    string RevID = Request["RevID"].ToString();
    SimpleCurRight CurRight = (SimpleCurRight)(ViewBag.CurRight);
    List<string> MachineList = (List<string>)(ViewBag.MachineList);
    SimpleEWIRevision EWIRevInfo = (SimpleEWIRevision)(ViewBag.EWIRevInfo);
}

@section style{
    <link href="~/Content/Compart/assets/plugins/dropzone-master/dist/dropzone.css" rel="stylesheet" />
    <link href="~/Content/plugins/orso/orso.css" rel="stylesheet" />
    <link href="~/Content/plugins/handsontable/dist/handsontable.css" rel="stylesheet" />
    <link href="~/Content/ExportReport.css?3" rel="stylesheet" />
    <style>
        * {
            padding: 0;
            margin: 0;
        }

        a {
            text-decoration: none;
            clear: inherit;
        }

        li {
            list-style: none;
        }

        .box {
            margin: 20px auto;
        }

        .box_l, .box_r {
            height: 360px;
            border: 1px solid #ccc;
            overflow: auto;
        }

        .box_l {
            float: left;
        }

        .box_m {
            float: left;
            text-align: center;
        }

            .box_m a {
                padding: 5px 10px;
                border: 1px solid #ccc;
                display: block;
                width: 70px;
                margin: 10px auto;
                border-radius: 5px;
            }

        .box_r {
            float: right;
        }

        .box, ::after {
            box-sizing: initial
        }

        .box, ::before {
            box-sizing: initial
        }

        .box_l li, .box_r li {
            line-height: 35px;
            font-size: 14px;
            padding-left: 15px;
            border-bottom: 1px solid #CCCCCC;
            cursor: pointer
        }

            .box_l li:last-child, .box_r li:last-child {
                border: none
            }

            .box_l li.choose, .box_r li.choose {
                background: #ddd;
            }
    </style>
}

<div class="row">
    <div class="col-lg-12">
        <div class="card card-outline-info">
            <div class="card-body">
                <div class="row">
                    <div class="col-2">
                        <h3>@Resource.Txt_EWIRevisionDetail</h3>
                    </div>
                    <div class="col-10 text-right">
                        <button id="btnOprManage" type="button" class="btn btn-info">
                            <i class="mdi mdi-table-edit"></i>@Resource.Txt_OPManage
                        </button>
                        <button id="btnUploadCustomerFileName" type="button" class="btn waves-effect waves-light btn-success">
                            <i class="mdi mdi-upload"></i>@Resource.Txt_UploadCustomerDrawing
                        </button>
                        <button id="btnUploadCAD" type="button" class="btn waves-effect waves-light btn-primary">
                            <i class="mdi mdi-auto-upload"></i>@Resource.Txt_UploadCAD
                        </button>
                        &nbsp;&nbsp;&nbsp;&nbsp;
                        <div class="btn-group CopyGroup" style="display:none;">
                            <button id="btnAdd" type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                <i class="fa fa-copy"></i>@Resource.Txt_Copy
                            </button>
                            <div class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 33px, 0px); top: 0px; left: 0px; will-change: transform;">
                                <a class="dropdown-item" href="#">@Resource.Txt_SOP</a>
                                <a class="dropdown-item" href="#">@Resource.Txt_OP</a>
                            </div>
                        </div>
                        <button id="btnNotifyQM" type="button" class="btn waves-effect waves-light btn-outline-primary">
                            <i class="mdi mdi-account-check"></i> @Resource.Txt_SubmitToQM
                        </button>
                        <div class="btn-group NotifyENG">
                            <button id="btnNotifyENG" type="button" class="btn waves-effect waves-light btn-outline-primary" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                <i class="mdi mdi-account-check"></i> @Resource.Txt_Submit
                            </button>
                            <div class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 33px, 0px); top: 0px; left: 0px; will-change: transform;">
                                <a class="dropdown-item mdi mdi-check-circle" href="#" onclick="NotifyEng()"> @Resource.Txt_Approve</a>
                                <a class="dropdown-item mdi mdi-close-circle" href="#" onclick="RejectType = 1;$('#ModalReason').modal();"> @Resource.Txt_Reject</a>
                            </div>
                        </div>
                        <button id="btnSubmit" type="button" class="btn waves-effect waves-light btn-outline-success">
                            <i class="fa fa-arrow-up"></i> @Resource.Txt_SubmitApproval
                        </button>
                        <button id="btnToogle" type="button" class="btn waves-effect waves-light btn-outline-secondary">
                            <i class="mdi mdi-repeat"></i> @Resource.Txt_SwitchViews
                        </button>
                        <button id="btnReGenerateEWI" type="button" class="btn waves-effect waves-light btn-outline-secondary" style="display:none;">
                            <i class="fa fa-recycle"></i> @Resource.Txt_RegenerateEWI
                        </button>
                        <div class="btn-group CheckGroup">
                            <button id="btnCheck" type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                <i class="fa fa-arrow-up"></i> @Resource.Txt_Approval
                            </button>
                            <div class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 33px, 0px); top: 0px; left: 0px; will-change: transform;">
                                <a class="dropdown-item mdi mdi-check-circle" href="#" onclick="Check(1)"> @Resource.Txt_Approve</a>
                                <a class="dropdown-item mdi mdi-close-circle" href="#" onclick="RejectType = 0;$('#ModalReason').modal();"> @Resource.Txt_Reject</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <h4 class="col-12">
                        @Resource.Txt_PartNumber : @EWIRevInfo.PartNum &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        @Resource.Txt_PartDescription : @EWIRevInfo.PartDesc
                        <br />
                        @Resource.Txt_CurrentRevision : @EWIRevInfo.Revision &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        @Resource.Txt_CustomerDrawing : <a id="lblCustomerFileName" href="javascript:void(0);" data-val="" onclick="ViewFile(this)">@(EWIRevInfo.CustomerFileName==""?Resource.Txt_None : EWIRevInfo.CustomerFileName)</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        @Resource.Txt_CustomerDrawingRevision : @EWIRevInfo.CustomerRev &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        @Resource.Txt_CAD : <a id="lblCAD" href="javascript:void(0);" data-val="CAD" onclick="ViewFile(this)">@(EWIRevInfo.CADFileName == ""? Resource.Txt_None : EWIRevInfo.CADFileName)</a>
                    </h4>
                </div>
                <hr style="margin-top:0px; margin-bottom:0px;" />
                <a id="EWIPDF"></a>
                <div class="card-body" id="EWIBody" style="padding-top:10px">
                    <div class="row form-group">
                        <div class="col-12">
                            <div class="row">
                                <div class="vtabs col-2">
                                    <ul class="nav nav-tabs tabs-vertical" id="ulOP">
                                        <li class="nav-item">
                                            <a class="nav-link active" data-toggle="tab" href="#" role="tab" aria-expanded="true">
                                                <span class="hidden-xs-down">OP1</span>
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#" role="tab" aria-expanded="false">
                                                <span class="hidden-xs-down">OP2</span>
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#" role="tab" aria-expanded="false">
                                                <span class="hidden-xs-down">OP3</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="col-10">
                                    <div class="card card-outline-info" style="margin-bottom:0px;">
                                        <div class="card-header">
                                            <h4 class="m-b-0 text-white">@Resource.Txt_BasicInfor</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="row Bottom10">
                                                <label class="col-2">@Resource.Txt_ApplicableModels: </label>
                                                <input class="form-control col-2 BasicInfo" type="text" data-col="Machine" id="txtMachine" list="MachineList" />
                                                <datalist id="MachineList">
                                                    @foreach (string Machine in MachineList)
                                                    {
                                                        <option value="@Machine"></option>
                                                    }
                                                </datalist>
                                                <label class="col-2">@Resource.Txt_WINo: </label>
                                                <input class="form-control col-6 BasicInfo" type="text" data-col="WICode" id="txtWICode" />
                                            </div>
                                            <div class="row Bottom10">
                                                <label class="col-2">@Resource.Txt_OPTime: </label>
                                                <input class="form-control col-2 BasicInfo" type="text" data-col="CycleTime" id="txtCycleTime" />
                                                <label class="col-2">@Resource.Txt_OPDescription: </label>
                                                <input class="form-control col-6 BasicInfo" type="text" data-col="OpDesc" id="txtOpDesc" />
                                            </div>
                                            <div class="row Bottom10">
                                                <label class="col-2">@Resource.Txt_FixtureNo: </label>
                                                <input class="form-control col-2 BasicInfo Fixture" type="text" data-col="FixtureNo" id="txtFixtureNo" />
                                                <label class="col-2">@Resource.Txt_FixtureLink: </label>
                                                <input class="form-control col-5 BasicInfo Fixture" type="text" data-col="FixtureFilePath" id="txtFixtureFilePath" />
                                                <button id="btnView" type="button" class="btn waves-effect waves-light btn-outline-secondary col-1"><i class="fa fa-search-plus waves-effect"></i> @Resource.Txt_View</button>
                                            </div>
                                            <div class="row Bottom10">
                                                <label class="col-2">@Resource.Txt_AttentionItem: </label>
                                                <textarea class="form-control col-10 BasicInfo" type="text" data-col="AttentionItem" id="txtAttentionItem"></textarea>
                                            </div>
                                            <div class="row Bottom10">
                                                <label class="col-2">@Resource.Txt_Definition: </label>
                                                <textarea class="form-control col-10 BasicInfo" type="text" data-col="Definition" id="txtDefinition"></textarea>
                                            </div>
                                            <div class="row Bottom10">
                                                <label class="col-2">@Resource.Txt_ResponsePlan: </label>
                                                <textarea class="form-control col-10 BasicInfo" type="text" data-col="ResponsePlan" id="txtResponsePlan"></textarea>
                                            </div>
                                            <div class="row">
                                                <div class="col-2">
                                                    <button id="btnUpload" type="button" style="display:none;" class="btn waves-effect waves-light btn-info">
                                                        <i class="mdi mdi-upload"></i> @Resource.Txt_UploadFile
                                                    </button>

                                                    <label id="lblUpload">@Resource.Txt_OPFile: </label>
                                                    <form action="~/Handler/FileUploadHandler.ashx" method="post" class="dropzone" style="display:none;"
                                                          id="myAwesomeDropzone" data-plugin="dropzone" enctype="multipart/form-data">
                                                        <div class="dz-message needsclick">
                                                            <h4>@Resource.Txt_DropFileUpload</h4>
                                                        </div>
                                                        <div class="fallback">
                                                            <input name="file" type="file" multiple />
                                                        </div>
                                                    </form>
                                                </div>
                                                <div class="col-10" style="padding-left:0px;padding-right:0px;">
                                                    <textarea id="taUpload" rows="3" class="form-control">@Resource.Txt_ClickToPaste（Ctrl+V）!</textarea>
                                                    <div id="tbMedia" style="width:100%"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card card-outline-info" style="margin-bottom:0px;">
                                        <div class="card-header">
                                            <div class="row">
                                                <div class="col-6" style="margin-top:8px">
                                                    <h4 class="m-b-0 text-white">@Resource.Txt_Criteria</h4>
                                                </div>
                                                <div class="col-6 text-right">
                                                    <button id="btnCompare" type="button" class="btn waves-effect waves-light btn-outline-secondary">
                                                        <i class="fa fa-window-restore"></i> @Resource.Txt_Compare
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-body" id="dvCriteria">
                                            <div id="tbCriteria"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="ModalOPList" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@Resource.Txt_OPSelection</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body form-group">
                <div class="box row">
                    <div class="box_l col-4" style="padding-left:0px;padding-right:0px;margin-left:20px;">
                    </div>
                    <div class="box_m col-3">
                        <a href="javascript:" id="alltop" style="margin-top:0px;width:80%" ">@Resource.Txt_MoveFirst</a>
                        <a href="javascript:" id="top" style="width:80%">@Resource.Txt_MoveUp</a>
                        <a href="javascript:" id="allleft" style="width:80%">@Resource.Txt_RemoveAll</a>
                        <a href="javascript:" id="left" style="width:80%">@Resource.Txt_RemoveSingle</a>
                        <a href="javascript:" id="right" style="width:80%">@Resource.Txt_AddSingle</a>
                        <a href="javascript:" id="allright" style="width:80%">@Resource.Txt_AddAll</a>
                        <a href="javascript:" id="bottom" style="width:80%">@Resource.Txt_MoveDown</a>
                        <a href="javascript:" id="allbottom" style="width:80%">@Resource.Txt_MoveLast</a>
                    </div>
                    <div class="box_r col-4" style="padding-left:0px;padding-right:0px;" id="operList">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnModalClose" type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> @Resource.Txt_Close</button>
                <button id="btnModalSave" type="button" class="btn btn-default"><i class="fa fa-save"></i> @Resource.Txt_Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalReason" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="top:30%">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@Resource.Txt_RejectReason</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body form-group">
                <label>@Resource.Txt_Reason: </label>
                <input class="form-control" type="text" id="txtModalReason" />
            </div>
            <div class="modal-footer">
                <button id="btnModalCloseReason" type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> @Resource.Txt_Close</button>
                <button id="btnModalSaveReason" type="button" class="btn btn-default"><i class="fa fa-save"></i> @Resource.Txt_Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalCriteria" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialogfull">
        <div class="modal-contentfull">
            <div class="modal-header row">
                <div class="col-4"></div>
                <h4 class="modal-title col-4 text-center" id="myModalLabel">@Resource.Txt_CriteriaDocumentCompare</h4>
                <div class="col-4 text-right">
                    <button id="btnModalPreviousPDF" type="button" class="btn btn-default"><i class="mdi mdi-skip-previous"></i></button>
                    <input type="text" id="txtModalCurPDF" class="form-control" style="width:40px" />
                    <label id="lblModalTotalPDF"></label>
                    <button id="btnModalNextPDF" type="button" class="btn btn-default"><i class="mdi mdi-skip-next"></i></button>
                    &nbsp;
                    <button id="btnModalCloseReason" type="button" class="btn btn-default btn-close" data-dismiss="modal"><i class="fa fa-close"></i> @Resource.Txt_Close</button>
                </div>
            </div>
            <div class="modal-body row">
                <div class="col-6" id="dvModalCriteria" style="Overflow: auto;">

                </div>
                <div class="col-6" style="Overflow: auto; height: 100%;">
                    <object id="ModalEWIPDF" type="application/pdf" style="width:100%;height:98%"></object>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-dialog" style="height:0px;display:none;">
        <div class="modal-content"><div class="modal-header"></div><div class="modal-body"></div></div>
    </div>
</div>

@section script {
    <script src="~/Scripts/paste.js"></script>
    <script src="~/Scripts/ExportReport.js"></script>
    <script src="~/Content/Compart/assets/plugins/dropzone-master/dist/dropzone.js"></script>
    <script type="text/javascript">
        var UploadType = 0;
        Dropzone.autoDiscover = false;
            var applyZone = new Dropzone("#myAwesomeDropzone");
            if (applyZone) {
                applyZone.destroy();
            }
            !function (n) {
                "use strict";
                function t() {
                    this.$body = n("body");
                }
                t.prototype.init = function () {
                    Dropzone.autoDiscover = !1,
                        n('[data-plugin="dropzone"]').each(function () {
                            var t = n(this).attr("action"),
                                i = n(this).data("previewsContainer"),
                                e = {
                                    url: t,
                                    acceptedFiles: ".pdf,.dwg",

                                    init: function () {
                                        this.on("sending", function (file, xhr, data) {
                                            LoadWaitMsg('@Resource.Txt_Uploading......');
                                            data.append("OP", CurOP);
                                            data.append("RevID", @RevID);
                                            data.append("UploadType", UploadType);
                                        });
                                        this.on("success", function (file, data) {
                                            CloseWaitMsg();
                                            if (UploadType == 0)
                                                LoadFile();
                                            else if (UploadType == 1)
                                                $('#lblCustomerFileName').text(data.NewName);
                                            else if (UploadType == 2)
                                                $('#lblCAD').text(data.NewName);

                                            if (data.ErrMsg.indexOf("@Resource.Txt_Rename") > 0) {
                                                swal(data.ErrMsg,'@Resource.Txt_UploadSucceeded','success');
                                            }
                                        });
                                        this.on("error", function (file, data) {
                                            CloseWaitMsg();
                                            swal(data.ErrMsg,'@Resource.Txt_UploadFailed','error');
                                        });
                                    },

                                };
                            i && (e.previewsContainer = i);
                            var o = n(this).data("uploadPreviewTemplate");
                            o && (e.previewTemplate = n(o).html());
                            n(this).dropzone(e)
                        });
                },
                    n.FileUpload = new t,
                    n.FileUpload.Constructor = t
            }(window.jQuery),

            function () {
                "use strict";
                window.jQuery.FileUpload.init()
            }();
    </script>
    <script src="~/Content/plugins/orso/orso.min.js"></script>
    <script src="~/Content/plugins/handsontable/dist/handsontable.full.min.js"></script>
    <script src="~/Scripts/jquery.media.js"></script>
    <script>
        var CurOP, RejectType = 0;
        var arrQM = ['EWI_QM', 'EWI_QM_FA', 'EWI_QM_NPI'];
        var arrFA = ['EWI_FA', 'EWI_QM_FA'];//FA
        var arrNPI = ['EWI_NPI', 'EWI_QM_NPI'];//只针对NPI
        var arrEngTmp = ['EWI_FA','EWI_NPI'];//工程 且是 临时菜单进来
        var arrCanChange = [9];
        var tmpRight = [], tmpRejRight = [];

        //控制参数设置
        var MarkCellList = [];
        const container = document.querySelector('#tbCriteria');
        const TestInstrument = GetTestInstrument();
        const hotCriteria = new Handsontable(container, {
            width: '100%',
            startRows: 10,
            startCols: 6,
            rowHeaders: true,
            colHeaders: ['@Resource.Txt_ID', '@Resource.Txt_Criteria', '@Resource.Txt_Figure', '@Resource.Txt_Tolerance', '@Resource.Txt_TestFrequency', '@Resource.Txt_TestInstrument'],
            columns: [
                { data: 'ID' },
                {
                    data: 'Criteria',
                    renderer: 'html',
                    className: 'GDT'
                },
                { data: 'Figure' },
                {
                    data: 'Tolerance',
                    renderer: 'html',
                    className: 'GDT'
                },
                { data: 'TestFrequency' },
                {
                    data: 'TestInstrument',
                    type: 'autocomplete',
                    source: TestInstrument,
                    strict: false
                }
            ],
            hiddenColumns: {
                columns: [0]
            },
            contextMenu: {
                items: {
                    row_above: {
                        name() {
                            return '<b>@Resource.Txt_InsertRowAbove</b>';
                        }},
                    row_below: {
                        name() {
                            return '<b>@Resource.Txt_InsertRowBelow</b>';
                        }},
                    remove_row: {
                        name() {
                            return '<b>@Resource.Txt_DeleteRow</b>';
                        }
                    },
                    sp1: '---------',
                    different: {
                        name() {
                            return '<b>@Resource.Txt_Mark</b>';
                        },
                        callback(key, selection, clickEvent) {
                            var startRow = selection[0].start.row;
                            var endRow = selection[0].end.row;
                            var startCol = selection[0].start.col;
                            var endCol = selection[0].end.col;
                            var oneCell = {};
                            for (var i = startRow; i <= endRow; i++) {
                                //行CriteriaID，不存在则标0
                                var CriteriaID = hotCriteria.getDataAtCell(i, 0);
                                CriteriaID = CriteriaID == null ? 0 : CriteriaID;
                                var DataList = "";

                                if (CriteriaID != 0) {
                                    for (var j = startCol; j <= endCol; j++) {
                                        //已标记不再重复标记
                                        var CurCell = hotCriteria.getCell(i, j);
                                        if (!$(CurCell).hasClass("orange")) {
                                            oneCell = {};
                                            oneCell.row = i;
                                            oneCell.col = j;
                                            oneCell.className = "orange";

                                            var hasCol = false;
                                            MarkCellList.forEach((val, k) => {
                                                if (val.row == oneCell.row && val.col == oneCell.col) {
                                                    hasCol = true;
                                                }
                                            })
                                            if (hasCol == false)
                                                MarkCellList.push(oneCell);

                                            switch (j) {
                                                case 1:
                                                    DataList += "Criteria;";
                                                    break;
                                                case 2:
                                                    DataList += "Figure;";
                                                    break;
                                                case 3:
                                                    DataList += "Tolerance;";
                                                    break;
                                                case 4:
                                                    DataList += "TestFrequency;";
                                                    break;
                                                case 5:
                                                    DataList += "TestInstrument;";
                                                    break;
                                                default:
                                                    break;
                                            }
                                        }
                                    }

                                    $.ajax({
                                        type: "POST",
                                        url: "/EWI/UpdateChangeMark",
                                        async: false,
                                        data: {
                                            CriteriaID: CriteriaID,
                                            DataList: DataList,
                                            MarkType: 0
                                        },
                                        dataType: "json",
                                        success: function (getResponse) {
                                            var Msg = getResponse.Msg;
                                            if (Msg != "") {
                                                swal('@Resource.Txt_UpdateFailed', Msg, 'error');
                                            }
                                        },
                                        error: function (xhr) {
                                            swal("@Resource.Txt_UpdateFailed", xhr.status + " " + xhr.statusText, 'error');
                                        }
                                    });
                                }
                            }
                            //界面
                            hotCriteria.updateSettings({
                                cell: MarkCellList
                            });
                        }
                    },
                    cancel_different: {
                        name() {
                            return '<b>@Resource.Txt_Unmark</b>';
                        },
                        callback(key, selection, clickEvent) {
                            var startRow = selection[0].start.row;
                            var endRow = selection[0].end.row;
                            var startCol = selection[0].start.col;
                            var endCol = selection[0].end.col;
                            for (var i = startRow; i <= endRow; i++) {
                                //行CriteriaID，不存在则标0
                                var CriteriaID = hotCriteria.getDataAtCell(i, 0);
                                CriteriaID = CriteriaID == null ? 0 : CriteriaID;
                                var DataList = "";

                                if (CriteriaID != 0) {
                                    for (var j = startCol; j <= endCol; j++) {
                                        MarkCellList.forEach((val, k) => {
                                            if (val.row == i && val.col == j) {
                                                MarkCellList.splice(k, 1)

                                                switch (j) {
                                                    case 1:
                                                        DataList += "Criteria;";
                                                        break;
                                                    case 2:
                                                        DataList += "Figure;";
                                                        break;
                                                    case 3:
                                                        DataList += "Tolerance;";
                                                        break;
                                                    case 4:
                                                        DataList += "TestFrequency;";
                                                        break;
                                                    case 5:
                                                        DataList += "TestInstrument;";
                                                        break;
                                                    default:
                                                        break;
                                                }
                                            }
                                        })
                                    }

                                    $.ajax({
                                        type: "POST",
                                        url: "/EWI/UpdateChangeMark",
                                        async: false,
                                        data: {
                                            CriteriaID: CriteriaID,
                                            DataList: DataList,
                                            MarkType: 1
                                        },
                                        dataType: "json",
                                        success: function (getResponse) {
                                            var Msg = getResponse.Msg;
                                            if (Msg != "") {
                                                swal('@Resource.Txt_UpdateFailed', Msg, 'error');
                                            }
                                        },
                                        error: function (xhr) {
                                            swal("@Resource.Txt_UpdateFailed", xhr.status + " " + xhr.statusText, 'error');
                                        }
                                    });
                                }
                            }
                            hotCriteria.updateSettings({
                                cell: MarkCellList
                            });
                        }
                    }
                }
            },
            //contextMenu: ['row_above', 'row_below', '---------', 'remove_row'],
            manualRowMove: true,
            renderAllRows: true,
            stretchH: 'all', // 'none' is default
            rowHeights: 30,
            licenseKey: 'non-commercial-and-evaluation',
            afterChange: function (change, source) {
                if (source === 'CopyPaste.paste') {
                    LoadWaitMsg('@Resource.Txt_Pasting......');
                }
                if (source === 'edit') {
                    change.forEach(([row, prop, oldValue, newValue]) => {
                        if (oldValue != newValue) {
                            var RegN = new RegExp("'", "g");
                            var tmpNewValue = newValue.replace(RegN, "''''")
                            var CriteriaID = hotCriteria.getDataAtCell(row, 0);
                            $.ajax({
                                type: "POST",
                                url: "/EWI/UpdateDetailCriteria",
                                async: false,
                                data: {
                                    RevID: @RevID,
                                    OP: CurOP,
                                    ID: CriteriaID,
                                    CriteriaSeq: row + 1,
                                    ColumnName: prop,
                                    NewValue: tmpNewValue
                                },
                                dataType: "json",
                                success: function (getResponse) {
                                    var Msg = getResponse.Msg;
                                    if (Msg != "") {
                                        swal('@Resource.Txt_UpdateFailed', Msg, 'error');
                                    }
                                    if (CriteriaID === null) {
                                        LoadData(0);
                                    }
                                },
                                error: function (xhr) {
                                    swal("@Resource.Txt_UpdateFailed", xhr.status + " " + xhr.statusText, 'error');
                                }
                            });
                        }
                    });
                }
            },
            beforeRemoveRow: (index, amount, physicalRows) => {
                var IDList = "";
                for (var i = 0; i < physicalRows.length; i++) {
                    var ID = hotCriteria.getDataAtCell(index + i, 0);
                    IDList += (IDList === "" ? "" : ";") + ID;
                }
                $.ajax({
                    type: "POST",
                    url: "/EWI/DeleteDetailCriteria",
                    async: false,
                    data: {
                        IDList: IDList
                    },
                    dataType: "json",
                    success: function (getResponse) {
                        var Msg = getResponse.Msg;
                        if (Msg != "") {
                            swal('@Resource.Txt_DeleteFailed', Msg, 'error');
                        }
                    },
                    error: function (xhr) {
                        swal("@Resource.Txt_DeleteFailed", xhr.status + " " + xhr.statusText, 'error');
                    }
                });
            },
            afterRowMove: (movedRows, finalIndex, dropIndex, movePossible, orderChanged) => {
                var SeqList = "", IDList = "";
                for (var i = 0; i < movedRows.length; i++) {
                    var ID = hotCriteria.getDataAtCell(finalIndex + i, 0);
                    IDList += (IDList === "" ? "" : ";") + ID;
                    SeqList += (SeqList === "" ? "" : ";") + (finalIndex + 1 + i);
                }
                if (orderChanged === true) {
                    $.ajax({
                        type: "POST",
                        url: "/EWI/MoveDetailCriteria",
                        async: false,
                        data: {
                            RevID: @RevID,
                            OP: CurOP,
                            IDList: IDList,
                            SeqList: SeqList
                        },
                        dataType: "json",
                        success: function (getResponse) {
                            var Msg = getResponse.Msg;
                            if (Msg != "") {
                                swal('@Resource.Txt_ModifyOrderFailed', Msg, 'error');
                            }
                        },
                        error: function (xhr) {
                            swal("@Resource.Txt_ModifyOrderFailed", xhr.status + " " + xhr.statusText, 'error');
                        }
                    });
                }
            },
            beforePaste: (data, coords) => {
                //return false; 可取消粘贴
                var NullRow = [];
                $.each(data, function (index, value) {
                    var FirCol = value[0];
                    if (FirCol == null) {
                        NullRow.push(index);
                    }
                });
                $.each(NullRow, function (index, value) {
                    data.splice(value, 1);
                });
            },
            afterPaste: (data, coords) => {
                var arrEWI = ['EWI', 'EWI_FA', 'EWI_NPI'];
                var DataList = "{CriteriaList}";
                //遍历行
                for (var i = coords[0].startRow; i <= coords[0].endRow; i++) {
                    //行CriteriaID，不存在则标0
                    var CriteriaID = hotCriteria.getDataAtCell(i, 0);
                    CriteriaID = CriteriaID == null ? 0 : CriteriaID;
                    DataList += "{CriteriaDetail ID=\"" + CriteriaID + "\" CriteriaSeq=\"" + (i + 1) + "\"";
                    //遍历列
                    for (var j = coords[0].startCol; j <= coords[0].endCol; j++) {
                        //质量填后2列;工程填前3列
                        if ((arrQM.indexOf('@CurRight.Menu') >= 0 && j >= 4)
                            || (arrEWI.indexOf('@CurRight.Menu') >= 0 && j <= 3)) {
                            //转义单双引号，防止出现问题
                            var RegN = new RegExp("'", "g");
                            var RegT = new RegExp('"', "g");
                            var RegA = new RegExp('&', "g");
                            var colData = data[i - coords[0].startRow][j - coords[0].startCol];
                            colData = colData == null ? "" : colData;
                            colData = colData.replace(RegT, '&quot;').replace(RegN, "&apos;").replace(RegA, "&amp;");
                            switch (j) {
                                case 1:
                                    DataList += " Criteria=\"" + colData + "\"";
                                    break;
                                case 2:
                                    DataList += " Figure=\"" + colData + "\"";
                                    break;
                                case 3:
                                    DataList += " Tolerance=\"" + colData + "\"";
                                    break;
                                case 4:
                                    DataList += " TestFrequency=\"" + colData + "\"";
                                    break;
                                case 5:
                                    DataList += " TestInstrument=\"" + colData + "\"";
                                    break;
                                default:
                                    break;
                            }
                        }
                    }
                    DataList += " /}";
                }
                DataList += "{/CriteriaList}";

                $.ajax({
                    type: "POST",
                    url: "/EWI/BacthUpdateDetailCriteria",
                    async: false,
                    data: {
                        RevID: @RevID,
                        OP: CurOP,
                        DataList: DataList,
                    },
                    dataType: "json",
                    success: function (getResponse) {
                        CloseWaitMsg();
                        var Msg = getResponse.Msg;
                        LoadData(0);
                        if (Msg != "") {
                            swal('@Resource.Txt_UpdateFailed', Msg, 'error');
                        }
                    },
                    error: function (xhr) {
                        CloseWaitMsg();
                        LoadData(0);
                        swal("@Resource.Txt_UpdateFailed", xhr.status + " " + xhr.statusText, 'error');
                    }
                });
            }
        });

        //文件设置
        const conMedia = document.querySelector('#tbMedia');
        const hotMedia = new Handsontable(conMedia, {
            startRows: 10,
            startCols: 6,
            rowHeaders: function (visualRowIndex) {
                return '';
            },
            colHeaders: ['@Resource.Txt_ID', '@Resource.Txt_File', '@Resource.Txt_Desc'],
            colWidths: ['0%', '30%', '70%'],
            columns: [
                { data: 'ID' },
                {
                    data: 'File',
                    renderer: 'html',
                    readOnly: true
                },
                { data: 'Desc' }
            ],
            hiddenColumns: {
                columns: [0]
            },
            contextMenu: {
                items: {
                    remove_row: {
                        name() {
                            return '<b>@Resource.Txt_DeleteRow</b>';
                        }
                    }
                }
            },
            manualRowMove: true,
            renderAllRows: true,
            stretchH: 'all', // 'none' is default
            rowHeights: 30,
            licenseKey: 'non-commercial-and-evaluation',
            afterChange: function (change, source) {
                if (source === 'edit') {
                    change.forEach(([row, prop, oldValue, newValue]) => {
                        if (oldValue != newValue) {
                            var MediaID = hotMedia.getDataAtCell(row, 0)
                            $.ajax({
                                type: "POST",
                                url: "/EWI/UpdateDetailMedia",
                                async: false,
                                data: {
                                    RevID: @RevID,
                                    OP: CurOP,
                                    ID: MediaID,
                                    CriteriaSeq: row + 1,
                                    ColumnName: prop,
                                    NewValue: newValue
                                },
                                dataType: "json",
                                success: function (getResponse) {
                                    var Msg = getResponse.Msg;
                                    if (Msg != "") {
                                        swal('@Resource.Txt_UpdateFailed', Msg, 'error');
                                    }
                                    if (MediaID === null) {
                                        LoadData(1);
                                    }
                                },
                                error: function (xhr) {
                                    swal("@Resource.Txt_UpdateFailed", xhr.status + " " + xhr.statusText, 'error');
                                }
                            });
                        }
                    });
                }
            },
            beforeRemoveRow: (index, amount, physicalRows) => {
                var IDList = "";
                for (var i = 0; i < physicalRows.length; i++) {
                    var ID = hotMedia.getDataAtCell(index + i, 0);
                    IDList += (IDList === "" ? "" : ";") + ID;
                }
                $.ajax({
                    type: "POST",
                    url: "/EWI/DeleteDetailMedia",
                    async: false,
                    data: {
                        IDList: IDList
                    },
                    dataType: "json",
                    success: function (getResponse) {
                        var Msg = getResponse.Msg;
                        if (Msg != "") {
                            swal('@Resource.Txt_DeleteFailed', Msg, 'error');
                        }
                    },
                    error: function (xhr) {
                        swal("@Resource.Txt_DeleteFailed", xhr.status + " " + xhr.statusText, 'error');
                    }
                });
            },
            afterRowMove: (movedRows, finalIndex, dropIndex, movePossible, orderChanged) => {
                var SeqList = "", IDList = "";
                for (var i = 0; i < movedRows.length; i++) {
                    var ID = hotMedia.getDataAtCell(finalIndex + i, 0);
                    IDList += (IDList === "" ? "" : ";") + ID;
                    SeqList += (SeqList === "" ? "" : ";") + (finalIndex + 1 + i);
                }
                if (orderChanged === true) {
                    $.ajax({
                        type: "POST",
                        url: "/EWI/MoveDetailMedia",
                        async: false,
                        data: {
                            RevID: @RevID,
                            OP: CurOP,
                            IDList: IDList,
                            SeqList: SeqList
                        },
                        dataType: "json",
                        success: function (getResponse) {
                            var Msg = getResponse.Msg;
                            if (Msg != "") {
                                swal('@Resource.Txt_ModifyOrderFailed', Msg, 'error');
                            }
                        },
                        error: function (xhr) {
                            swal("@Resource.Txt_ModifyOrderFailed", xhr.status + " " + xhr.statusText, 'error');
                        }
                    });
                }
            }
        });

        $(document).ready(function () {
            //上传文件
            $('#taUpload').pastableTextarea()
                .on('keypress', function (event) {
                    return false;
                })
                .on('pasteText', function (event, text) {
                    return false;
                })
                .on('pasteImage', function (event, image) {
                    if ('@CurRight.CheckRight' != '0' || arrCanChange.indexOf(@EWIRevInfo.ApprovalStatus) >= 0)
                        return false;
                    else {
                        var formData = new FormData();
                        formData.append('PartNum', '@EWIRevInfo.PartNum');
                        formData.append('Revision', '@EWIRevInfo.Revision');
                        formData.append('OP', CurOP);
                        formData.append('RevID', '@RevID');
                        formData.append('UploadFile', image.dataURL);

                        $.ajax({
                            type: "POST",
                            url: "/EWI/UploadFile",
                            data: formData,
                            contentType: false,
                            processData: false,
                            success: function (data) {
                                if (data.Msg == "") {
                                    LoadFile();
                                    swal('@Resource.Txt_PasteSucceeded', data.Msg, 'success');
                                }
                                else {
                                    swal('@Resource.Txt_PasteFailed', data.Msg, 'error');
                                }
                            }
                        });
                    }
                })
                .on('pasteError', function (event, err) {
                    $('textarea').text(err.message);
                })

            //审核权限处理
            if ('@CurRight.CheckRight' != '0') {
                $('#EWIBody').attr('style', 'display:none;');
                $('#EWIPDF').attr("href", "@(urlPrefix + "EWIFiles/" + EWIRevInfo.EWIFileName)?" + Math.random());
                $('#EWIPDF').media({
                    width: "100%",
                    height: 600
                });

                $('#taUpload').attr('style', 'display:none;');
                $('.CopyGroup').attr('style', 'display:none;');
                $('#btnSubmit').attr('style', 'display:none;');
                $('#btnOprManage').attr('style', 'display:none;');
                $('#btnUploadCustomerFileName').attr('style', 'display:none;');
                $('#btnUploadCAD').attr('style', 'display:none;');
                $('#btnNotifyQM').attr('style', 'display:none;');
                $('#btnNotifyENG').attr('style', 'display:none;');
                $('#btnUpload').attr('style', 'display:none;');
                $('#lblUpload').attr('style', 'display:block;');

                $('.BasicInfo').attr("readonly", "readonly");
                hotCriteria.updateSettings({
                    readOnly: true,
                    contextMenu: false,
                    columns: [
                        { data: 'ID' },
                        {
                            data: 'Criteria',
                            renderer: 'html',
                            readOnly: true,
                            className: 'darkgrey GDT'
                        },
                        {
                            data: 'Figure',
                            readOnly: true,
                            className: 'darkgrey'
                        },
                        {
                            data: 'Tolerance',
                            renderer: 'html',
                            readOnly: true,
                            className: 'darkgrey GDT'
                        },
                        {
                            data: 'TestFrequency',
                            className: 'darkgrey'
                        },
                        {
                            data: 'TestInstrument',
                            type: 'autocomplete',
                            source: TestInstrument,
                            strict: false,
                            className: 'darkgrey'
                        }
                    ]
                });
                hotMedia.updateSettings({
                    readOnly: true,
                    contextMenu: false,
                    columns: [
                        { data: 'ID' },
                        {
                            data: 'File',
                            renderer: 'html',
                            className: 'darkgrey'
                        },
                        {
                            data: 'Desc',
                            className: 'darkgrey'
                        }
                    ]
                });
                $('#myAwesomeDropzone').attr('style', 'display:none;');

                //重写权限数组
                if ('@CurRight.CheckRight' == '31') {
                    tmpRight = [1, 3];
                    tmpRejRight = [11, 13];
                }
                else if ('@CurRight.CheckRight' == '32') {
                    tmpRight = [2, 3];
                    tmpRejRight = [12, 13];
                }

                if (@CurRight.CheckRight != @EWIRevInfo.ApprovalStatus
                    && @CurRight.CheckRight + 10 != @EWIRevInfo.ApprovalStatus
                    && tmpRight.indexOf(@EWIRevInfo.ApprovalStatus) < 0
                    && tmpRejRight.indexOf(@EWIRevInfo.ApprovalStatus) < 0) {
                    $('#btnCheck').attr('style', 'display:none;');
                }
            }
            else {
                $('#EWIPDF').attr("style", "display:none;");
                if (arrCanChange.indexOf(@EWIRevInfo.ApprovalStatus) >= 0) {
                    $('#taUpload').attr('style', 'display:none;');
                    $('.CopyGroup').attr('style', 'display:none;');
                    $('#btnSubmit').attr('style', 'display:none;');
                    $('#btnOprManage').attr('style', 'display:none;');
                    $('#btnUploadCustomerFileName').attr('style', 'display:none;');
                    $('#btnUploadCAD').attr('style', 'display:none;');
                    $('#btnNotifyQM').attr('style', 'display:none;');
                    $('#btnNotifyENG').attr('style', 'display:none;');
                    $('#btnUpload').attr('style', 'display:none;');
                    $('#lblUpload').attr('style', 'display:block;');
                    //基础信息不可改 但(FA和临时)夹具例外
                    $('.BasicInfo').attr("readonly", "readonly");
                    if (arrEngTmp.indexOf('@CurRight.Menu') >= 0) {
                        $('.Fixture').removeAttr("readonly");
                        $('#btnReGenerateEWI').removeAttr("style");
                    }
                    $('#myAwesomeDropzone').attr('style', 'display:none;');
                    hotCriteria.updateSettings({
                        readOnly: true,
                        contextMenu: false,
                        columns: [
                            { data: 'ID' },
                            {
                                data: 'Criteria',
                                renderer: 'html',
                                readOnly: true,
                                className: 'darkgrey GDT'
                            },
                            {
                                data: 'Figure',
                                readOnly: true,
                                className: 'darkgrey'
                            },
                            {
                                data: 'Tolerance',
                                renderer: 'html',
                                readOnly: true,
                                className: 'darkgrey GDT'
                            },
                            {
                                data: 'TestFrequency',
                                readOnly: true,
                                className: 'darkgrey'
                            },
                            {
                                data: 'TestInstrument',
                                type: 'autocomplete',
                                source: TestInstrument,
                                strict: false,
                                readOnly: true,
                                className: 'darkgrey'
                            }
                        ]
                    });
                    hotMedia.updateSettings({
                        readOnly: true,
                        contextMenu: false,
                        columns: [
                            { data: 'ID' },
                            {
                                data: 'File',
                                renderer: 'html',
                                className: 'darkgrey'
                            },
                            {
                                data: 'Desc',
                                className: 'darkgrey'
                            }
                        ]
                    });
                }
                else if (arrQM.indexOf('@CurRight.Menu') >= 0) {
                    $('#taUpload').attr('style', 'display:none;');
                    $('.CopyGroup').attr('style', 'display:none;');
                    $('#btnOprManage').attr('style', 'display:none;');
                    $('#btnUploadCustomerFileName').attr('style', 'display:none;');
                    $('#btnUploadCAD').attr('style', 'display:none;');
                    $('#btnNotifyQM').attr('style', 'display:none;');
                    $('#btnSubmit').attr('style', 'display:none;');
                    $('#btnUpload').attr('style', 'display:none;');
                    $('#lblUpload').attr('style', 'display:block;');

                    $('.BasicInfo').attr("readonly", "readonly");
                    hotCriteria.updateSettings({
                        contextMenu: {
                            items: {
                                different: {
                                    name() {
                                        return '<b>@Resource.Txt_Mark</b>';
                                    },
                                    callback(key, selection, clickEvent) {
                                        var startRow = selection[0].start.row;
                                        var endRow = selection[0].end.row;
                                        var startCol = selection[0].start.col;
                                        var endCol = selection[0].end.col;
                                        var oneCell = {};
                                        for (var i = startRow; i <= endRow; i++) {
                                            //行CriteriaID，不存在则标0
                                            var CriteriaID = hotCriteria.getDataAtCell(i, 0);
                                            CriteriaID = CriteriaID == null ? 0 : CriteriaID;
                                            var DataList = "";

                                            if (CriteriaID != 0) {
                                                for (var j = startCol; j <= endCol; j++) {
                                                    //已标记不再重复标记
                                                    var CurCell = hotCriteria.getCell(i, j);
                                                    if (!$(CurCell).hasClass("orange")) {
                                                        oneCell = {};
                                                        oneCell.row = i;
                                                        oneCell.col = j;
                                                        oneCell.className = "orange";

                                                        var hasCol = false;
                                                        MarkCellList.forEach((val, k) => {
                                                            if (val.row == oneCell.row && val.col == oneCell.col) {
                                                                hasCol = true;
                                                            }
                                                        })
                                                        if (hasCol == false)
                                                            MarkCellList.push(oneCell);

                                                        switch (j) {
                                                            case 1:
                                                                DataList += "Criteria;";
                                                                break;
                                                            case 2:
                                                                DataList += "Figure;";
                                                                break;
                                                            case 3:
                                                                DataList += "Tolerance;";
                                                                break;
                                                            case 4:
                                                                DataList += "TestFrequency;";
                                                                break;
                                                            case 5:
                                                                DataList += "TestInstrument;";
                                                                break;
                                                            default:
                                                                break;
                                                        }
                                                    }
                                                }

                                                $.ajax({
                                                    type: "POST",
                                                    url: "/EWI/UpdateChangeMark",
                                                    async: false,
                                                    data: {
                                                        CriteriaID: CriteriaID,
                                                        DataList: DataList,
                                                        MarkType: 0
                                                    },
                                                    dataType: "json",
                                                    success: function (getResponse) {
                                                        var Msg = getResponse.Msg;
                                                        if (Msg != "") {
                                                            swal('@Resource.Txt_UpdateFailed', Msg, 'error');
                                                        }
                                                    },
                                                    error: function (xhr) {
                                                        swal("@Resource.Txt_UpdateFailed", xhr.status + " " + xhr.statusText, 'error');
                                                    }
                                                });
                                            }
                                        }
                                        //界面
                                        hotCriteria.updateSettings({
                                            cell: MarkCellList
                                        });
                                    }
                                },
                                cancel_different: {
                                    name() {
                                        return '<b>@Resource.Txt_Unmark</b>';
                                    },
                                    callback(key, selection, clickEvent) {
                                        var startRow = selection[0].start.row;
                                        var endRow = selection[0].end.row;
                                        var startCol = selection[0].start.col;
                                        var endCol = selection[0].end.col;
                                        for (var i = startRow; i <= endRow; i++) {
                                            //行CriteriaID，不存在则标0
                                            var CriteriaID = hotCriteria.getDataAtCell(i, 0);
                                            CriteriaID = CriteriaID == null ? 0 : CriteriaID;
                                            var DataList = "";

                                            if (CriteriaID != 0) {
                                                for (var j = startCol; j <= endCol; j++) {
                                                    MarkCellList.forEach((val, k) => {
                                                        if (val.row == i && val.col == j) {
                                                            MarkCellList.splice(k, 1)

                                                            switch (j) {
                                                                case 1:
                                                                    DataList += "Criteria;";
                                                                    break;
                                                                case 2:
                                                                    DataList += "Figure;";
                                                                    break;
                                                                case 3:
                                                                    DataList += "Tolerance;";
                                                                    break;
                                                                case 4:
                                                                    DataList += "TestFrequency;";
                                                                    break;
                                                                case 5:
                                                                    DataList += "TestInstrument;";
                                                                    break;
                                                                default:
                                                                    break;
                                                            }
                                                        }
                                                    })
                                                }

                                                $.ajax({
                                                    type: "POST",
                                                    url: "/EWI/UpdateChangeMark",
                                                    async: false,
                                                    data: {
                                                        CriteriaID: CriteriaID,
                                                        DataList: DataList,
                                                        MarkType: 1
                                                    },
                                                    dataType: "json",
                                                    success: function (getResponse) {
                                                        var Msg = getResponse.Msg;
                                                        if (Msg != "") {
                                                            swal('@Resource.Txt_UpdateFailed', Msg, 'error');
                                                        }
                                                    },
                                                    error: function (xhr) {
                                                        swal("@Resource.Txt_UpdateFailed", xhr.status + " " + xhr.statusText, 'error');
                                                    }
                                                });
                                            }
                                        }
                                        hotCriteria.updateSettings({
                                            cell: MarkCellList
                                        });
                                    }
                                }
                            }
                        },
                        allowInsertRow: false,
                        columns: [
                            { data: 'ID' },
                            {
                                data: 'Criteria',
                                renderer: 'html',
                                readOnly: true,
                                className: 'darkgrey GDT'
                            },
                            {
                                data: 'Figure',
                                readOnly: true,
                                className: 'darkgrey'
                            },
                            {
                                data: 'Tolerance',
                                renderer: 'html',
                                readOnly: true,
                                className: 'darkgrey GDT'
                            },
                            {
                                data: 'TestFrequency'
                            },
                            {
                                data: 'TestInstrument',
                                type: 'autocomplete',
                                source: TestInstrument,
                                strict: false
                            }
                        ]
                    });
                    hotMedia.updateSettings({
                        contextMenu: false,
                        readOnly: true,
                        columns: [
                            { data: 'ID' },
                            {
                                data: 'File',
                                renderer: 'html',
                                className: 'darkgrey'
                            },
                            {
                                data: 'Desc',
                                className: 'darkgrey'}
                        ]
                    });
                    $('#myAwesomeDropzone').attr('style', 'display:none;');
                }
                else {
                    $('#btnNotifyENG').attr('style', 'display:none;');
                    //FA菜单进来
                    if (arrFA.indexOf('@CurRight.Menu') >= 0) {
                        $('#btnSubmit').text('@Resource.Txt_SubmitManager');
                    }
                    //NPI菜单进来
                    else if(arrNPI.indexOf('@CurRight.Menu') >= 0) {
                        $('#btnSubmit').text('@Resource.Txt_SubmitComplete');
                    }
                    else {
                        //正常不显示完成
                        $('#btnSubmit').attr('style', 'display:none;');
                    }

                    hotCriteria.updateSettings({
                        columns: [
                            { data: 'ID' },
                            {
                                data: 'Criteria',
                                renderer: 'html',
                                className: 'GDT'
                            },
                            { data: 'Figure' },
                            {
                                data: 'Tolerance',
                                renderer: 'html',
                                className: 'GDT'
                            },
                            {
                                data: 'TestFrequency',
                                readOnly: true,
                                className: 'darkgrey'
                            },
                            {
                                data: 'TestInstrument',
                                type: 'autocomplete',
                                source: TestInstrument,
                                strict: false,
                                readOnly: true,
                                className: 'darkgrey'
                            }
                        ]
                    });
                }

                $('#btnToogle').attr('style', 'display:none;');
                $('.CheckGroup').attr('style', 'display:none;');
            }

            LoadOP();

            //重新生成EWI
            $("#btnReGenerateEWI").click(function () {
                LoadWaitMsg('@Resource.Txt_RegeneratingEWI......');
                $.ajax({
                    type: "POST",
                    url: "/EWI/ReGenerateEWIFile",
                    async: true,
                    dataType: "json",
                    data: {
                        PartNum: '@EWIRevInfo.PartNum',
                        RevID: '@RevID'
                    },
                    success: function (data) {
                        CloseWaitMsg();
                        if (data.Msg == "") {
                            swal({
                                title: "@Resource.Txt_RegenerateEWISucceeded",
                                text: "",
                                type: "success",
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#4cc7db',
                                confirmButtonText: '@Resource.Txt_ExportReturn',
                                cancelButtonText: '@Resource.Txt_Return'
                            }).then(function (isConfirm) {
                                if (isConfirm.value != undefined && isConfirm.value == true)
                                    ExportReport('ExportReport', '@EWIRevInfo.PartNum', '@RevID', '1');

                                if (isConfirm) {
                                    window.location = "@(urlPrefix)EWI/EWIView?RoleName=@CurRight.Menu";
                                }
                            });
                        }
                        else {
                            swal('@Resource.Txt_RegenerateEWIFailed', data.Msg, 'error');
                        }
                    },
                    error: function (e) {
                        var startTitle = e.responseText.indexOf('<title>') + 7;
                        var endTitle = e.responseText.indexOf('</title>');
                        swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                    }
                });
            });

            $("#btnModalSave").click(function () {
                OprSave();
            });

            //拒绝邮件，保存原因
            $("#btnModalSaveReason").click(function () {
                $("#ModalReason").modal("hide");
                Check(0, $("#txtModalReason").val());
            });

            $('#btnOprManage').on("click", function () {
                OprManage();
            });

            //工程通知品质
            $('#btnNotifyQM').on("click", function () {
                LoadWaitMsg('@Resource.Txt_SendingEmailToQM......');
                $.ajax({
                    type: "POST",
                    url: "/EWI/NotifyEmail",
                    async: true,
                    dataType: "json",
                    data: { RevID: @RevID},
                    success: function (data) {
                        CloseWaitMsg();;
                        if (data.Msg == "") {
                            swal({
                                title: "@Resource.Txt_SubmitQMSucceeded",
                                text: "@Resource.Txt_SentEmail!",
                                type: "success",
                                confirmButtonColor: "#3085d6",
                                confirmButtonText: "@Resource.Txt_Return"
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    window.location = "@(urlPrefix)EWI/EWIView?RoleName=@CurRight.Menu";
                                }
                            });
                        }
                        else {
                            swal('@Resource.Txt_SubmitFailed', data.Msg, 'error');
                        }
                    }
                });
            });

            //（品质按钮）提交给经理审批
            $('#btnSubmit').on("click", function () {
                LoadWaitMsg('@Resource.Txt_SubmittingApproval......');
                $.ajax({
                    type: "POST",
                    url: "/EWI/SubmitRev",
                    async: true,
                    dataType: "json",
                    data: {
                        RevID: @RevID,
                        PartNum: '@EWIRevInfo.PartNum',
                        SubmitType: 0
                    },
                    success: function (data) {
                        CloseWaitMsg();
                        if (data.Msg == "") {
                            swal({
                                title: "@Resource.Txt_SubmitApprovalSucceeded",
                                text: "@Resource.Txt_SentEmail!",
                                type: "success",
                                confirmButtonColor: "#3085d6",
                                confirmButtonText: "@Resource.Txt_Return"
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    window.location = "@(urlPrefix)EWI/EWIView?RoleName=@CurRight.Menu";
                                }
                            });
                        }
                        else {
                            swal('@Resource.Txt_SubmitFailed', data.Msg, 'error');
                        }
                    }
                });
            });

            $("#btnView").click(function () {
                if ($('#txtFixtureFilePath').val() != "")
                    window.open($('#txtFixtureFilePath').val());
            });

            $(".ErrMsgBox").hide();
            $(".ClearMsg").click(function () {
                $(".ErrMsg").remove();
                $(".ErrMsgBox").hide();
            });

            //基础信息修改
            $('.BasicInfo').on("blur", function () {
                if ($(this).val() == $(this).attr("data-val")) return;

                $(this).attr("data-val", $(this).val());
                $.ajax({
                    type: "POST",
                    url: "/EWI/UpdateDetailBasic",
                    async: false,
                    data: {
                        RevID: @RevID,
                        OP: CurOP,
                        ColumnName: $(this).attr('data-col'),
                        NewValue: $(this).val()
                    },
                    dataType: "json",
                    success: function (getResponse) {
                        var Msg = getResponse.Msg;
                        if (Msg != "") {
                            swal('@Resource.Txt_ModifyFailed', Msg, 'error');
                        }
                    },
                    error: function (xhr) {
                        swal("@Resource.Txt_ModifyFailed", xhr.status + " " + xhr.statusText, 'error');
                    }
                });
            });
            //切换视图
            $('#btnToogle').click(function () {
                LoadData();
                ToogleView();
            });

            //上传客户文件\CAD\图片
            $('#btnUpload').click(function () {
                UploadType = 0;
                $('.needsclick').click();
            });
            $('#btnUploadCustomerFileName').click(function () {
                UploadType = 1;
                $('.needsclick').click();
            });
            $('#btnUploadCAD').click(function () {
                UploadType = 2;
                $('.needsclick').click();
            });

            //对比专用
            $('#btnCompare').click(function () {
                LoadCompare();
            });
            $('.btn-close').on("click", function () {
                $('#dvCriteria').append($('#tbCriteria'));
                hotCriteria.updateSettings({
                    width: '100%',
                    height: null
                });
                setTimeout(function () { LoadCriteria();}, 500);
            });
            $('#btnModalNextPDF').click(function () {
                CheckCurRow("Next");
            });
            $('#btnModalPreviousPDF').click(function () {
                CheckCurRow("Previous");
            });
            $('#txtModalCurPDF').on("blur", function () {
                CheckCurRow("Current");
            });
        });

        //品质提交审批
        function NotifyEng() {
            $('#btnSubmit').click();
        };

        //对比PDF的参数
        var TotalRows = 0, CurRow = 1;
        function LoadCompare() {
            //加载PDF
            TotalRows = hotMedia.countRows() + ($('#lblCustomerFileName').text() == "@Resource.Txt_None" ? 0 : 1);
            $('#lblModalTotalPDF').text(" / " + TotalRows);
            $("#ModalCriteria").modal();
            CheckCurRow('First');
            setTimeout(function () { LoadModalPDF(); }, 500);//延时才能加载数据
            //加载参数表
            $('#dvModalCriteria').append($('#tbCriteria'));
            hotCriteria.updateSettings({
                height: '98%'
            });
            setTimeout(function () { LoadCriteria(); }, 500);
        }
        function CheckCurRow(CheckType) {
            var tmpCur = CurRow;
            if (CheckType == "Next") {
                CurRow += 1;
            }
            else if (CheckType == "Previous") {
                CurRow -= 1;
            }
            else if (CheckType == "Current") {
                CurRow = parseInt($('#txtModalCurPDF').val());
                CurRow = isNaN(CurRow) ? 1 : CurRow;
            }
            else if (CheckType == "First") {
                CurRow = 1;
            }

            if (CurRow > TotalRows) {
                CurRow = TotalRows;
            }
            else if (CurRow <= 0) {
                CurRow = 1;
            }

            $('#txtModalCurPDF').val(CurRow);
            if (tmpCur != CurRow) {
                LoadModalPDF();
            }
        }
        function LoadModalPDF() {
            $('#txtModalCurPDF').val(CurRow);

            var CurFileName = "", CustFileCount = ($('#lblCustomerFileName').text() == "@Resource.Txt_None" ? 0 : 1);
            if (CurRow == 1 && CustFileCount != 0) {
                CurFileName = $('#lblCustomerFileName').text();
                $('#ModalEWIPDF').attr("data", "@urlPrefix" + "UploadFiles/CustomerFile/" + CurFileName + "?" + Math.random());
            }
            else {
                CurFileName = hotMedia.getDataAtCell(CurRow - 1 - CustFileCount, 1);
                $('#ModalEWIPDF').attr("data", $(CurFileName).attr("data-val") + "?" + Math.random());
            }
        }

        //加载PO及基础数据
        var CurOPList;
        function LoadOP() {
            //清空子元素
            $('#ulOP').find('li').each(function () {
                $(this).remove();
            });

            //OPCode
            $.ajax({
                type: "POST",
                url: "/EWI/GetEWIDetailCodeList",
                async: true,
                dataType: "json",
                data: { RevID: @RevID },
                success: function (OPList) {
                    //赋值，方便修改工序
                    CurOPList = OPList.data;
                    //加载子元素
                    for (var i = 0; i < CurOPList.length; i++) {
                        var tmpOP = CurOPList[i];

                        var tmpSpan = $('<span class="hidden - xs - down">' + tmpOP['OpCodeDesc'] + '-' + tmpOP['OpCode'] + '</span>');
                        var tmpA;
                        if (i == 0)
                            tmpA = $('<a class="nav-link active" data-toggle="tab" href="#" role="tab" aria-expanded="true"></a>');
                        else
                            tmpA = $('<a class="nav-link" data-toggle="tab" href="#" role="tab" aria-expanded="false"></a>');
                        var tmpLi = $('<li class="nav-item" onclick="CurOP=\'' + tmpOP['OpCode'] + '\';LoadData(1)"></li>');
                        tmpLi.attr("data-val", tmpOP['OpCode']);
                        tmpLi.attr("data-text", tmpOP['OpCodeDesc']);
                        tmpLi.attr("data-seq", tmpOP['OprSeq']);

                        tmpSpan.appendTo(tmpA);
                        tmpA.appendTo(tmpLi);
                        tmpLi.appendTo($('#ulOP'));
                    }
                    CurOP = $('#ulOP').find('li').eq(0).attr("data-val");
                    LoadData(1);
                }
            });
        }

        //加载基础数据
        function LoadData(ClearFile = 0) {
            //移除上传结果
            if (ClearFile === 1) {
                $('.dz-preview').remove();
            }

            //基础资料
            LoadBasic();

            //参数设置
            LoadCriteria();

            //文件
            LoadFile();
        }
        //加载基础资料
        function LoadBasic() {
            $.ajax({
                type: "POST",
                url: "/EWI/GetEWIDetailBasic",
                async: true,
                dataType: "json",
                data: { RevID: @RevID, OP: CurOP },
                success: function (Basic) {
                    if (Basic.Data) {
                        $('#txtMachine').val(Basic.Data.Machine).attr("data-val", Basic.Data.Machine);
                        $('#txtOpDesc').val(Basic.Data.OpDesc).attr("data-val", Basic.Data.OpDesc);
                        $('#txtCycleTime').val(Basic.Data.CycleTime).attr("data-val", Basic.Data.CycleTime);
                        $('#txtWICode').val(Basic.Data.WICode).attr("data-val", Basic.Data.WICode);
                        $('#txtAttentionItem').val(Basic.Data.AttentionItem).attr("data-val", Basic.Data.AttentionItem);
                        $('#txtFixtureNo').val(Basic.Data.FixtureNo).attr("data-val", Basic.Data.FixtureNo);
                        $('#txtFixtureFilePath').val(Basic.Data.FixtureFilePath).attr("data-val", Basic.Data.FixtureFilePath);
                        $('#txtDefinition').val(Basic.Data.Definition).attr("data-val", Basic.Data.Definition);
                        $('#txtResponsePlan').val(Basic.Data.ResponsePlan).attr("data-val", Basic.Data.ResponsePlan);
                    }
                }
            });
        }
        //加载参数设置
        function LoadCriteria() {
            MarkCellList = [];
            $.ajax({
                type: "POST",
                url: "/EWI/GetEWIDetailCriteria",
                async: true,
                dataType: "json",
                data: { RevID: @RevID, OP: CurOP },
                success: function (Criteria) {
                    hotCriteria.updateData(Criteria.Data);
                    for (var i = 0; i <= Criteria.Data.length - 1; i++) {
                        var ChangeColumn = Criteria.Data[i].ChangeColumn;
                        PushList(i, ChangeColumn, "Criteria;");
                        PushList(i, ChangeColumn, "Figure;");
                        PushList(i, ChangeColumn, "Tolerance;");
                        PushList(i, ChangeColumn, "TestFrequency;");
                        PushList(i, ChangeColumn, "TestInstrument;");
                    }
                    hotCriteria.updateSettings({
                        cell: MarkCellList
                    });

                    if (Criteria.Data.length == 0 && arrQM.indexOf('@CurRight.Menu') < 0) {
                        hotCriteria.alter('insert_row', 0);
                    }
                }
            });
        }
        function PushList(row, ChangeColumn, TmpColumn) {
            var tmpCol = 0;
            switch (TmpColumn) {
                case "Criteria;":
                    tmpCol = 1;
                    break;
                case "Figure;":
                    tmpCol = 2;
                    break;
                case "Tolerance;":
                    tmpCol = 3;
                    break;
                case "TestFrequency;":
                    tmpCol = 4;
                    break;
                case "TestInstrument;":
                    tmpCol = 5;
                    break;
                default:
                    break;
            }

            if (ChangeColumn.indexOf(TmpColumn) >= 0) {
                var oneCell = {};
                oneCell.row = row;
                oneCell.col = tmpCol;
                oneCell.className = "orange";

                var hasCol = false;
                MarkCellList.forEach((val, k) => {
                    if (val.row == oneCell.row && val.col == oneCell.col) {
                        hasCol = true;
                    }
                })
                if (hasCol == false)
                    MarkCellList.push(oneCell);
            }
        }
        //加载文件
        function LoadFile() {
            $.ajax({
                type: "POST",
                url: "/EWI/GetEWIDetailMedia",
                async: true,
                dataType: "json",
                data: { RevID: @RevID, OP: CurOP },
                success: function (Media) {
                    hotMedia.updateData(Media.Data);
                }
            });
        }

        //管理当前版本工序
        function OprManage() {
            //清空子元素
            $('.box_l').find('li').each(function () {
                $(this).remove();
            });
            $('.box_r').find('li').each(function () {
                $(this).remove();
            });

            $.ajax({
                type: "POST",
                url: "/EWI/GetTotalOPCodeList",
                async: true,
                dataType: "json",
                data: { RevID: @RevID },
                success: function (OPList) {
                    for (var i = 0; i < OPList.data.length; i++) {
                        var tmpOP = OPList.data[i];

                        var tmpLi = $('<li>' + tmpOP['OpCode'] + ':' + tmpOP['OpDesc'] + '</li>');
                        tmpLi.attr("data-val", tmpOP['OpCode']);
                        tmpLi.attr("data-text", tmpOP['OpDesc']);
                        tmpLi.appendTo($(".box_l"));
                    }

                    for (var i = 0; i < CurOPList.length; i++) {
                        var tmpOP = CurOPList[i];

                        var tmpLi = $('<li>' + tmpOP['OpCode'] + ':' + tmpOP['OpCodeDesc'] + '</li>');
                        tmpLi.attr("data-val", tmpOP['OpCode']);
                        tmpLi.attr("data-text", tmpOP['OpCodeDesc']);
                        tmpLi.appendTo($(".box_r"));
                    }

                    $(".box").orso({
                        boxl: ".box_l",//左边大盒子
                        boxr: ".box_r",//右边大盒子
                        boxlrX: "li",//移动小盒子
                        boxon: "choose",//点击添加属性
                        idclass: true,//添加的属性是否为class//true=class; false=id;
                        boxlan: "#left",//单个向左移动按钮
                        boxran: "#right",//单个向右移动按钮
                        boxtan: "#top",//单个向上移动按钮
                        boxban: "#bottom",//单个向下移动按钮
                        boxalllan: "#allleft",//批量向左移动按钮
                        boxallran: "#allright",//批量向右移动按钮
                        boxalltan: "#alltop",//移动第一个按钮
                        boxallban: "#allbottom"//移动最后一个按钮
                    });

                    $("#ModalOPList").modal();
                },
                error: function (e) {
                    var startTitle = e.responseText.indexOf('<title>') + 7;
                    var endTitle = e.responseText.indexOf('</title>');
                    swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                }
            });
        }
        //保存修改的工序
        function OprSave() {
            var param = {};
            var OPList = new Array();

            $(".box_r").find("li").each(function () {
                OPList.push($(this).html().split(':')[0]);
            })

            if (OPList.length == 0) {
                showAlert("@Resource.Txt_ReserveOneOP");
                return;
            }

            swal({
                title: '@Resource.Txt_ModifyOPConfirm？',
                text: '',
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@Resource.Txt_Confirm',
                cancelButtonText: '@Resource.Txt_Cancel',
                confirmButtonClass: 'btn btn-success',
                cancelButtonClass: 'btn btn-danger',
                buttonsStyling: false
            }).then(function (isConfirm) {
                if (isConfirm.value === true) {
                    param.RevID = @RevID;
                    param.OPList = OPList;

                    $.post("/EWI/UpdateDetailOP", param, function (getResponse) {
                        $("#ModalOPList").modal("hide");

                        var Msg = getResponse.Msg;
                        if (Msg == "") {
                            LoadOP();
                            swal('@Resource.Txt_ModifySucceeded！', '', 'success');
                        }
                        else {
                            swal('@Resource.Txt_ContactIT', Msg, 'error');
                        }
                    });

                }
            });
        }

        //获取参数设置-》下拉框source
        function GetTestInstrument() {
            var test;
            $.ajax({
                type: "POST",
                url: "/EWI/GetTestInstrument",
                async: false,
                dataType: "json",
                success: function (TestInstrument) {
                    test = TestInstrument.data;
                },
                error: function (e) {
                    var startTitle = e.responseText.indexOf('<title>') + 7;
                    var endTitle = e.responseText.indexOf('</title>');
                    swal(e.responseText.substring(startTitle, endTitle), '', 'error');
                }
            });
            return test;
        }

        //查看文件
        function ViewFile(File) {
            if (File != null && $(File).text() != '@Resource.Txt_None') {
                var tmpFile = window.open('_blank');
                if ($(File).attr("data-val") == "")
                    tmpFile.location = "@urlPrefix" + "UploadFiles/CustomerFile/" + $(File).text();
                else if ($(File).attr("data-val") == "CAD")
                    tmpFile.location = "@urlPrefix" + "UploadFiles/CAD/" + $(File).text();
                else
                    tmpFile.location = $(File).attr("data-val");
            }
        }

        //经理、经理(正常)、ECN、DCC审批
        function Check(CheckType, CheckReason = '') {
            var Msg = (RejectType == 0 ? "@Resource.Txt_ApprovingSendingEmail......" : "@Resource.Txt_RejectingSendingEmail......");
            LoadWaitMsg(Msg);
            $.ajax({
                type: "POST",
                url: "/EWI/SubmitRev",
                async: true,
                dataType: "json",
                data: {
                    RevID: @RevID,
                    SubmitType: @CurRight.CheckRight,
                    CheckType: CheckType,
                    CheckReason: CheckReason,
                    PartNum: '@EWIRevInfo.PartNum'
                },
                success: function (data) {
                    CloseWaitMsg();
                    if (data.Msg == "") {
                        if('@CurRight.CheckRight' == '4')
                            swal({
                                title: (CheckType == 1 ? "@Resource.Txt_Approved" : "@Resource.Txt_Rejected"),
                                text: "",
                                type: "success",
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#4cc7db',
                                confirmButtonText: '@Resource.Txt_ExportReturn',
                                cancelButtonText: '@Resource.Txt_Return'
                            }).then(function (isConfirm) {
                                if (isConfirm.value != undefined && isConfirm.value == true)
                                    ExportReport('ExportReport', '@EWIRevInfo.PartNum', '@RevID', '1');

                                if (isConfirm) {
                                    window.location = (RejectType == 0 ? "@(urlPrefix)EWI/EWICheckView" : "@(urlPrefix)EWI/EWIView?RoleName=@CurRight.Menu");
                                }
                            });
                        else
                            swal({
                                title: (CheckType == 1 ? "@Resource.Txt_Approved" : "@Resource.Txt_Rejected"),
                                text: "",
                                type: "success",
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: '@Resource.Txt_Return',
                            }).then(function (isConfirm) {
                                if (isConfirm) {
                                    window.location = (RejectType == 0 ? "@(urlPrefix)EWI/EWICheckView" : "@(urlPrefix)EWI/EWIView?RoleName=@CurRight.Menu");
                                }
                            });
                    }
                    else {
                        swal('@Resource.Txt_OperationFailed', data.Msg, 'error');
                    }
                }
            });
        }
        //切换视图
        function ToogleView() {
            if ($('#EWIBody').attr('style') == "display:none;") {
                $('#EWIBody').attr('style', 'display:block;');
                $('#EWIPDF').attr("style", "display:none;");
            }
            else {
                $('#EWIBody').attr('style', 'display:none;');
                $('#EWIPDF').attr("style", "display:block;");
            }
        }

    </script>
}